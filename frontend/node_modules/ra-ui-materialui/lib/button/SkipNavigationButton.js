"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var styles_1 = require("@material-ui/core/styles");
var Button_1 = __importDefault(require("./Button"));
var ra_core_1 = require("ra-core");
var classnames_1 = __importDefault(require("classnames"));
var skipToContent = function () {
    if (typeof document === 'undefined')
        return;
    var element = document.getElementById('main-content');
    if (!element) {
        if (process.env.NODE_ENV !== 'production') {
            console.warn('No element with id "main-content" was found. Ensure the element that contains your main content has an id of "main-content".');
        }
        return;
    }
    element.setAttribute('tabIndex', '-1');
    element.focus();
    element.blur();
    element.removeAttribute('tabIndex');
};
var useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    skipToContentButton: {
        position: 'fixed',
        padding: theme.spacing(1),
        backgroundColor: theme.palette.background.default,
        color: theme.palette.getContrastText(theme.palette.background.default),
        transition: theme.transitions.create(['top', 'opacity'], {
            easing: theme.transitions.easing.easeIn,
            duration: theme.transitions.duration.leavingScreen,
        }),
        left: theme.spacing(2),
        top: theme.spacing(-10),
        zIndex: 5000,
        '&:hover': {
            opacity: 0.8,
            backgroundColor: theme.palette.background.default,
        },
        '&:focus': {
            top: theme.spacing(2),
            transition: theme.transitions.create(['top', 'opacity'], {
                easing: theme.transitions.easing.easeOut,
                duration: theme.transitions.duration.enteringScreen,
            }),
        },
    },
}); }, { name: 'RaSkipToContentButton' });
var SkipNavigationButton = function () {
    var classes = useStyles();
    var translate = (0, ra_core_1.useTranslate)();
    return (react_1.default.createElement(Button_1.default, { onClick: skipToContent, className: (0, classnames_1.default)(classes.skipToContentButton, 'skip-nav-button'), label: translate('ra.navigation.skip_nav'), variant: "contained" }));
};
exports.default = SkipNavigationButton;
