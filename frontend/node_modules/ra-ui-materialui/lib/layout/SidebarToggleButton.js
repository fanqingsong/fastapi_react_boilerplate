"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SidebarToggleButton = void 0;
var React = __importStar(require("react"));
var core_1 = require("@material-ui/core");
var styles_1 = require("@material-ui/core/styles");
var Menu_1 = __importDefault(require("@material-ui/icons/Menu"));
var ra_core_1 = require("ra-core");
var useToggleSidebar_1 = require("./useToggleSidebar");
/**
 * A button that toggles the sidebar. Used by default in the <AppBar>.
 * @param props The component props
 * @param {String} props.className An optional class name to apply to the button
 * @param {ClassesOverride<typeof useStyles>} props.classes An object containing styles.
 */
var SidebarToggleButton = function (props) {
    var translate = (0, ra_core_1.useTranslate)();
    var classes = useStyles(props);
    var className = props.className;
    var _a = (0, useToggleSidebar_1.useToggleSidebar)(), open = _a[0], toggleSidebar = _a[1];
    return (React.createElement(core_1.Tooltip, { title: translate(open ? 'ra.action.close_menu' : 'ra.action.open_menu', {
            _: 'Open/Close menu',
        }), enterDelay: 500 },
        React.createElement(core_1.IconButton, { color: "inherit", onClick: function () { return toggleSidebar(); }, className: className },
            React.createElement(Menu_1.default, { classes: {
                    root: open
                        ? classes.menuButtonIconOpen
                        : classes.menuButtonIconClosed,
                } }))));
};
exports.SidebarToggleButton = SidebarToggleButton;
var useStyles = (0, styles_1.makeStyles)(function (theme) { return ({
    menuButtonIconClosed: {
        transition: theme.transitions.create(['transform'], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.leavingScreen,
        }),
        transform: 'rotate(0deg)',
    },
    menuButtonIconOpen: {
        transition: theme.transitions.create(['transform'], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.leavingScreen,
        }),
        transform: 'rotate(180deg)',
    },
}); }, { name: 'RaSidebarToggleButton' });
