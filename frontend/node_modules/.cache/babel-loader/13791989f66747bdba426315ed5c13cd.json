{"ast":null,"code":"import { useEffect } from 'react';\nimport useGetPermissions from './useGetPermissions';\nimport { useSafeSetState } from '../util/hooks';\nvar emptyParams = {};\n/**\n * Hook for getting user permissions\n *\n * Calls the authProvider.getPermissions() method asynchronously.\n * If the authProvider returns a rejected promise, returns empty permissions.\n *\n * The return value updates according to the request state:\n *\n * - start: { loading: true, loaded: false }\n * - success: { permissions: [any], loading: false, loaded: true }\n * - error: { error: [error from provider], loading: false, loaded: true }\n *\n * Useful to enable features based on user permissions\n *\n * @param {Object} params Any params you want to pass to the authProvider\n *\n * @returns The current auth check state. Destructure as { permissions, error, loading, loaded }.\n *\n * @example\n *     import { usePermissions } from 'react-admin';\n *\n *     const PostDetail = props => {\n *         const { loaded, permissions } = usePermissions();\n *         if (loaded && permissions == 'editor') {\n *             return <PostEdit {...props} />\n *         } else {\n *             return <PostShow {...props} />\n *         }\n *     };\n */\n\nvar usePermissions = function (params) {\n  if (params === void 0) {\n    params = emptyParams;\n  }\n\n  var _a = useSafeSetState({\n    loading: true,\n    loaded: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var getPermissions = useGetPermissions();\n  useEffect(function () {\n    getPermissions(params).then(function (permissions) {\n      setState({\n        loading: false,\n        loaded: true,\n        permissions: permissions\n      });\n    }).catch(function (error) {\n      setState({\n        loading: false,\n        loaded: true,\n        error: error\n      });\n    });\n  }, [getPermissions, params, setState]);\n  return state;\n};\n\nexport default usePermissions;","map":{"version":3,"names":["useEffect","useGetPermissions","useSafeSetState","emptyParams","usePermissions","params","_a","loading","loaded","state","setState","getPermissions","then","permissions","catch","error"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-core/esm/auth/usePermissions.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useGetPermissions from './useGetPermissions';\nimport { useSafeSetState } from '../util/hooks';\nvar emptyParams = {};\n/**\n * Hook for getting user permissions\n *\n * Calls the authProvider.getPermissions() method asynchronously.\n * If the authProvider returns a rejected promise, returns empty permissions.\n *\n * The return value updates according to the request state:\n *\n * - start: { loading: true, loaded: false }\n * - success: { permissions: [any], loading: false, loaded: true }\n * - error: { error: [error from provider], loading: false, loaded: true }\n *\n * Useful to enable features based on user permissions\n *\n * @param {Object} params Any params you want to pass to the authProvider\n *\n * @returns The current auth check state. Destructure as { permissions, error, loading, loaded }.\n *\n * @example\n *     import { usePermissions } from 'react-admin';\n *\n *     const PostDetail = props => {\n *         const { loaded, permissions } = usePermissions();\n *         if (loaded && permissions == 'editor') {\n *             return <PostEdit {...props} />\n *         } else {\n *             return <PostShow {...props} />\n *         }\n *     };\n */\nvar usePermissions = function (params) {\n    if (params === void 0) { params = emptyParams; }\n    var _a = useSafeSetState({\n        loading: true,\n        loaded: false,\n    }), state = _a[0], setState = _a[1];\n    var getPermissions = useGetPermissions();\n    useEffect(function () {\n        getPermissions(params)\n            .then(function (permissions) {\n            setState({ loading: false, loaded: true, permissions: permissions });\n        })\n            .catch(function (error) {\n            setState({\n                loading: false,\n                loaded: true,\n                error: error,\n            });\n        });\n    }, [getPermissions, params, setState]);\n    return state;\n};\nexport default usePermissions;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAAUC,MAAV,EAAkB;EACnC,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;IAAEA,MAAM,GAAGF,WAAT;EAAuB;;EAChD,IAAIG,EAAE,GAAGJ,eAAe,CAAC;IACrBK,OAAO,EAAE,IADY;IAErBC,MAAM,EAAE;EAFa,CAAD,CAAxB;EAAA,IAGIC,KAAK,GAAGH,EAAE,CAAC,CAAD,CAHd;EAAA,IAGmBI,QAAQ,GAAGJ,EAAE,CAAC,CAAD,CAHhC;;EAIA,IAAIK,cAAc,GAAGV,iBAAiB,EAAtC;EACAD,SAAS,CAAC,YAAY;IAClBW,cAAc,CAACN,MAAD,CAAd,CACKO,IADL,CACU,UAAUC,WAAV,EAAuB;MAC7BH,QAAQ,CAAC;QAAEH,OAAO,EAAE,KAAX;QAAkBC,MAAM,EAAE,IAA1B;QAAgCK,WAAW,EAAEA;MAA7C,CAAD,CAAR;IACH,CAHD,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAiB;MACxBL,QAAQ,CAAC;QACLH,OAAO,EAAE,KADJ;QAELC,MAAM,EAAE,IAFH;QAGLO,KAAK,EAAEA;MAHF,CAAD,CAAR;IAKH,CAVD;EAWH,CAZQ,EAYN,CAACJ,cAAD,EAAiBN,MAAjB,EAAyBK,QAAzB,CAZM,CAAT;EAaA,OAAOD,KAAP;AACH,CArBD;;AAsBA,eAAeL,cAAf"},"metadata":{},"sourceType":"module"}