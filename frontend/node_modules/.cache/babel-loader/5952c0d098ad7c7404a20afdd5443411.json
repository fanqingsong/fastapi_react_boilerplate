{"ast":null,"code":"import * as React from 'react';\nimport { TranslatableContextProvider, useTranslatable, useRecordContext } from 'ra-core';\nimport { TranslatableFieldsTabs } from './TranslatableFieldsTabs';\nimport { TranslatableFieldsTabContent } from './TranslatableFieldsTabContent';\nimport { makeStyles } from '@material-ui/core/styles';\n/**\n * Provides a way to show multiple languages for any field passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableFields locales={['en', 'fr']}>\n *     <TextField source={getSource('title')} />\n *     <TextField source={getSource('description')} />\n * </TranslatableFields>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableFields\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextField source={getSource('title')} />\n * <TranslatableFields>\n>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={selectLocale}>\n *             {locales.map((locale) => (\n *                 <option selected={locale.locale === selectedLocale}>\n *                     {locale.name}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * * @param props The component props\n * * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * * @param {string[]} props.locales An array of the possible locales in the form. For example [{ 'en', 'fr' }].\n * * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to Material UI tabs.\n */\n\nexport var TranslatableFields = function (props) {\n  var defaultLocale = props.defaultLocale,\n      locales = props.locales,\n      _a = props.groupKey,\n      groupKey = _a === void 0 ? '' : _a,\n      _b = props.selector,\n      selector = _b === void 0 ? React.createElement(TranslatableFieldsTabs, {\n    groupKey: groupKey\n  }) : _b,\n      children = props.children,\n      resource = props.resource,\n      basePath = props.basePath;\n  var record = useRecordContext(props);\n  var context = useTranslatable({\n    defaultLocale: defaultLocale,\n    locales: locales\n  });\n  var classes = useStyles(props);\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(TranslatableContextProvider, {\n    value: context\n  }, selector, locales.map(function (locale) {\n    return React.createElement(TranslatableFieldsTabContent, {\n      key: locale,\n      basePath: basePath,\n      locale: locale,\n      record: record,\n      resource: resource,\n      groupKey: groupKey\n    }, children);\n  })));\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(0.5)\n    }\n  };\n}, {\n  name: 'RaTranslatableFields'\n});","map":{"version":3,"names":["React","TranslatableContextProvider","useTranslatable","useRecordContext","TranslatableFieldsTabs","TranslatableFieldsTabContent","makeStyles","TranslatableFields","props","defaultLocale","locales","_a","groupKey","_b","selector","createElement","children","resource","basePath","record","context","classes","useStyles","className","root","value","map","locale","key","theme","flexGrow","marginTop","spacing","marginBottom","name"],"sources":["/app/node_modules/ra-ui-materialui/esm/field/TranslatableFields.js"],"sourcesContent":["import * as React from 'react';\nimport { TranslatableContextProvider, useTranslatable, useRecordContext, } from 'ra-core';\nimport { TranslatableFieldsTabs } from './TranslatableFieldsTabs';\nimport { TranslatableFieldsTabContent } from './TranslatableFieldsTabContent';\nimport { makeStyles } from '@material-ui/core/styles';\n/**\n * Provides a way to show multiple languages for any field passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableFields locales={['en', 'fr']}>\n *     <TextField source={getSource('title')} />\n *     <TextField source={getSource('description')} />\n * </TranslatableFields>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableFields\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextField source={getSource('title')} />\n * <TranslatableFields>\n>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={selectLocale}>\n *             {locales.map((locale) => (\n *                 <option selected={locale.locale === selectedLocale}>\n *                     {locale.name}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * * @param props The component props\n * * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * * @param {string[]} props.locales An array of the possible locales in the form. For example [{ 'en', 'fr' }].\n * * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to Material UI tabs.\n */\nexport var TranslatableFields = function (props) {\n    var defaultLocale = props.defaultLocale, locales = props.locales, _a = props.groupKey, groupKey = _a === void 0 ? '' : _a, _b = props.selector, selector = _b === void 0 ? React.createElement(TranslatableFieldsTabs, { groupKey: groupKey }) : _b, children = props.children, resource = props.resource, basePath = props.basePath;\n    var record = useRecordContext(props);\n    var context = useTranslatable({ defaultLocale: defaultLocale, locales: locales });\n    var classes = useStyles(props);\n    return (React.createElement(\"div\", { className: classes.root },\n        React.createElement(TranslatableContextProvider, { value: context },\n            selector,\n            locales.map(function (locale) { return (React.createElement(TranslatableFieldsTabContent, { key: locale, basePath: basePath, locale: locale, record: record, resource: resource, groupKey: groupKey }, children)); }))));\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {\n        flexGrow: 1,\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(0.5),\n    },\n}); }, { name: 'RaTranslatableFields' });\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,2BAAT,EAAsCC,eAAtC,EAAuDC,gBAAvD,QAAgF,SAAhF;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiB;EAC7C,IAAIC,aAAa,GAAGD,KAAK,CAACC,aAA1B;EAAA,IAAyCC,OAAO,GAAGF,KAAK,CAACE,OAAzD;EAAA,IAAkEC,EAAE,GAAGH,KAAK,CAACI,QAA7E;EAAA,IAAuFA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAvH;EAAA,IAA2HE,EAAE,GAAGL,KAAK,CAACM,QAAtI;EAAA,IAAgJA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBb,KAAK,CAACe,aAAN,CAAoBX,sBAApB,EAA4C;IAAEQ,QAAQ,EAAEA;EAAZ,CAA5C,CAAhB,GAAsFC,EAAjP;EAAA,IAAqPG,QAAQ,GAAGR,KAAK,CAACQ,QAAtQ;EAAA,IAAgRC,QAAQ,GAAGT,KAAK,CAACS,QAAjS;EAAA,IAA2SC,QAAQ,GAAGV,KAAK,CAACU,QAA5T;EACA,IAAIC,MAAM,GAAGhB,gBAAgB,CAACK,KAAD,CAA7B;EACA,IAAIY,OAAO,GAAGlB,eAAe,CAAC;IAAEO,aAAa,EAAEA,aAAjB;IAAgCC,OAAO,EAAEA;EAAzC,CAAD,CAA7B;EACA,IAAIW,OAAO,GAAGC,SAAS,CAACd,KAAD,CAAvB;EACA,OAAQR,KAAK,CAACe,aAAN,CAAoB,KAApB,EAA2B;IAAEQ,SAAS,EAAEF,OAAO,CAACG;EAArB,CAA3B,EACJxB,KAAK,CAACe,aAAN,CAAoBd,2BAApB,EAAiD;IAAEwB,KAAK,EAAEL;EAAT,CAAjD,EACIN,QADJ,EAEIJ,OAAO,CAACgB,GAAR,CAAY,UAAUC,MAAV,EAAkB;IAAE,OAAQ3B,KAAK,CAACe,aAAN,CAAoBV,4BAApB,EAAkD;MAAEuB,GAAG,EAAED,MAAP;MAAeT,QAAQ,EAAEA,QAAzB;MAAmCS,MAAM,EAAEA,MAA3C;MAAmDR,MAAM,EAAEA,MAA3D;MAAmEF,QAAQ,EAAEA,QAA7E;MAAuFL,QAAQ,EAAEA;IAAjG,CAAlD,EAA+JI,QAA/J,CAAR;EAAoL,CAApN,CAFJ,CADI,CAAR;AAIH,CATM;AAUP,IAAIM,SAAS,GAAGhB,UAAU,CAAC,UAAUuB,KAAV,EAAiB;EAAE,OAAQ;IAClDL,IAAI,EAAE;MACFM,QAAQ,EAAE,CADR;MAEFC,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;MAGFC,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,GAAd;IAHZ;EAD4C,CAAR;AAMzC,CANqB,EAMnB;EAAEE,IAAI,EAAE;AAAR,CANmB,CAA1B"},"metadata":{},"sourceType":"module"}