{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { Provider, ReactReduxContext } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport { DataProviderContext, convertLegacyDataProvider } from '../dataProvider';\nimport createAdminStore from './createAdminStore';\nimport TranslationProvider from '../i18n/TranslationProvider';\n\nvar CoreAdminContext = function (props) {\n  var authProvider = props.authProvider,\n      dataProvider = props.dataProvider,\n      i18nProvider = props.i18nProvider,\n      children = props.children,\n      history = props.history,\n      customReducers = props.customReducers,\n      customSagas = props.customSagas,\n      initialState = props.initialState;\n  var reduxIsAlreadyInitialized = !!useContext(ReactReduxContext);\n\n  if (!dataProvider) {\n    throw new Error(\"Missing dataProvider prop.\\nReact-admin requires a valid dataProvider function to work.\");\n  }\n\n  var finalAuthProvider = authProvider instanceof Function ? convertLegacyAuthProvider(authProvider) : authProvider;\n  var finalDataProvider = dataProvider instanceof Function ? convertLegacyDataProvider(dataProvider) : dataProvider;\n  var finalHistory = history || createHashHistory();\n\n  var renderCore = function () {\n    return React.createElement(AuthContext.Provider, {\n      value: finalAuthProvider\n    }, React.createElement(DataProviderContext.Provider, {\n      value: finalDataProvider\n    }, React.createElement(TranslationProvider, {\n      i18nProvider: i18nProvider\n    }, typeof window !== 'undefined' ? React.createElement(ConnectedRouter, {\n      history: finalHistory\n    }, children) : children)));\n  };\n\n  var store = useState(function () {\n    return !reduxIsAlreadyInitialized ? createAdminStore({\n      authProvider: finalAuthProvider,\n      customReducers: customReducers,\n      customSagas: customSagas,\n      dataProvider: finalDataProvider,\n      initialState: initialState,\n      history: finalHistory\n    }) : undefined;\n  })[0];\n\n  if (reduxIsAlreadyInitialized) {\n    if (!history) {\n      throw new Error(\"Missing history prop.\\nWhen integrating react-admin inside an existing redux Provider, you must provide the same 'history' prop to the <Admin> as the one used to bootstrap your routerMiddleware.\\nReact-admin uses this history for its own ConnectedRouter.\");\n    }\n\n    return renderCore();\n  } else {\n    return React.createElement(Provider, {\n      store: store\n    }, renderCore());\n  }\n};\n\nexport default CoreAdminContext;","map":{"version":3,"names":["React","useContext","useState","Provider","ReactReduxContext","createHashHistory","ConnectedRouter","AuthContext","convertLegacyAuthProvider","DataProviderContext","convertLegacyDataProvider","createAdminStore","TranslationProvider","CoreAdminContext","props","authProvider","dataProvider","i18nProvider","children","history","customReducers","customSagas","initialState","reduxIsAlreadyInitialized","Error","finalAuthProvider","Function","finalDataProvider","finalHistory","renderCore","createElement","value","window","store","undefined"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-core/esm/core/CoreAdminContext.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext, useState } from 'react';\nimport { Provider, ReactReduxContext } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport { DataProviderContext, convertLegacyDataProvider, } from '../dataProvider';\nimport createAdminStore from './createAdminStore';\nimport TranslationProvider from '../i18n/TranslationProvider';\nvar CoreAdminContext = function (props) {\n    var authProvider = props.authProvider, dataProvider = props.dataProvider, i18nProvider = props.i18nProvider, children = props.children, history = props.history, customReducers = props.customReducers, customSagas = props.customSagas, initialState = props.initialState;\n    var reduxIsAlreadyInitialized = !!useContext(ReactReduxContext);\n    if (!dataProvider) {\n        throw new Error(\"Missing dataProvider prop.\\nReact-admin requires a valid dataProvider function to work.\");\n    }\n    var finalAuthProvider = authProvider instanceof Function\n        ? convertLegacyAuthProvider(authProvider)\n        : authProvider;\n    var finalDataProvider = dataProvider instanceof Function\n        ? convertLegacyDataProvider(dataProvider)\n        : dataProvider;\n    var finalHistory = history || createHashHistory();\n    var renderCore = function () {\n        return (React.createElement(AuthContext.Provider, { value: finalAuthProvider },\n            React.createElement(DataProviderContext.Provider, { value: finalDataProvider },\n                React.createElement(TranslationProvider, { i18nProvider: i18nProvider }, typeof window !== 'undefined' ? (React.createElement(ConnectedRouter, { history: finalHistory }, children)) : (children)))));\n    };\n    var store = useState(function () {\n        return !reduxIsAlreadyInitialized\n            ? createAdminStore({\n                authProvider: finalAuthProvider,\n                customReducers: customReducers,\n                customSagas: customSagas,\n                dataProvider: finalDataProvider,\n                initialState: initialState,\n                history: finalHistory,\n            })\n            : undefined;\n    })[0];\n    if (reduxIsAlreadyInitialized) {\n        if (!history) {\n            throw new Error(\"Missing history prop.\\nWhen integrating react-admin inside an existing redux Provider, you must provide the same 'history' prop to the <Admin> as the one used to bootstrap your routerMiddleware.\\nReact-admin uses this history for its own ConnectedRouter.\");\n        }\n        return renderCore();\n    }\n    else {\n        return React.createElement(Provider, { store: store }, renderCore());\n    }\n};\nexport default CoreAdminContext;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,aAA5C;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,WAAT,EAAsBC,yBAAtB,QAAuD,SAAvD;AACA,SAASC,mBAAT,EAA8BC,yBAA9B,QAAgE,iBAAhE;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;;AACA,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiB;EACpC,IAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;EAAA,IAAuCC,YAAY,GAAGF,KAAK,CAACE,YAA5D;EAAA,IAA0EC,YAAY,GAAGH,KAAK,CAACG,YAA/F;EAAA,IAA6GC,QAAQ,GAAGJ,KAAK,CAACI,QAA9H;EAAA,IAAwIC,OAAO,GAAGL,KAAK,CAACK,OAAxJ;EAAA,IAAiKC,cAAc,GAAGN,KAAK,CAACM,cAAxL;EAAA,IAAwMC,WAAW,GAAGP,KAAK,CAACO,WAA5N;EAAA,IAAyOC,YAAY,GAAGR,KAAK,CAACQ,YAA9P;EACA,IAAIC,yBAAyB,GAAG,CAAC,CAACtB,UAAU,CAACG,iBAAD,CAA5C;;EACA,IAAI,CAACY,YAAL,EAAmB;IACf,MAAM,IAAIQ,KAAJ,CAAU,yFAAV,CAAN;EACH;;EACD,IAAIC,iBAAiB,GAAGV,YAAY,YAAYW,QAAxB,GAClBlB,yBAAyB,CAACO,YAAD,CADP,GAElBA,YAFN;EAGA,IAAIY,iBAAiB,GAAGX,YAAY,YAAYU,QAAxB,GAClBhB,yBAAyB,CAACM,YAAD,CADP,GAElBA,YAFN;EAGA,IAAIY,YAAY,GAAGT,OAAO,IAAId,iBAAiB,EAA/C;;EACA,IAAIwB,UAAU,GAAG,YAAY;IACzB,OAAQ7B,KAAK,CAAC8B,aAAN,CAAoBvB,WAAW,CAACJ,QAAhC,EAA0C;MAAE4B,KAAK,EAAEN;IAAT,CAA1C,EACJzB,KAAK,CAAC8B,aAAN,CAAoBrB,mBAAmB,CAACN,QAAxC,EAAkD;MAAE4B,KAAK,EAAEJ;IAAT,CAAlD,EACI3B,KAAK,CAAC8B,aAAN,CAAoBlB,mBAApB,EAAyC;MAAEK,YAAY,EAAEA;IAAhB,CAAzC,EAAyE,OAAOe,MAAP,KAAkB,WAAlB,GAAiChC,KAAK,CAAC8B,aAAN,CAAoBxB,eAApB,EAAqC;MAAEa,OAAO,EAAES;IAAX,CAArC,EAAgEV,QAAhE,CAAjC,GAA+GA,QAAxL,CADJ,CADI,CAAR;EAGH,CAJD;;EAKA,IAAIe,KAAK,GAAG/B,QAAQ,CAAC,YAAY;IAC7B,OAAO,CAACqB,yBAAD,GACDZ,gBAAgB,CAAC;MACfI,YAAY,EAAEU,iBADC;MAEfL,cAAc,EAAEA,cAFD;MAGfC,WAAW,EAAEA,WAHE;MAIfL,YAAY,EAAEW,iBAJC;MAKfL,YAAY,EAAEA,YALC;MAMfH,OAAO,EAAES;IANM,CAAD,CADf,GASDM,SATN;EAUH,CAXmB,CAAR,CAWT,CAXS,CAAZ;;EAYA,IAAIX,yBAAJ,EAA+B;IAC3B,IAAI,CAACJ,OAAL,EAAc;MACV,MAAM,IAAIK,KAAJ,CAAU,gQAAV,CAAN;IACH;;IACD,OAAOK,UAAU,EAAjB;EACH,CALD,MAMK;IACD,OAAO7B,KAAK,CAAC8B,aAAN,CAAoB3B,QAApB,EAA8B;MAAE8B,KAAK,EAAEA;IAAT,CAA9B,EAAgDJ,UAAU,EAA1D,CAAP;EACH;AACJ,CAvCD;;AAwCA,eAAehB,gBAAf"},"metadata":{},"sourceType":"module"}