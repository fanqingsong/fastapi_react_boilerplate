{"ast":null,"code":"import * as React from 'react';\nimport CoreAdminContext from './CoreAdminContext';\nimport CoreAdminUI from './CoreAdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <Core dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Core>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdmin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </CoreAdmin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\n * import { useEffect, useState } from 'react';\n * import {\n *     CoreAdminContext,\n *     CoreAdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdminContext dataProvider={myDataProvider}>\n *         <UI />\n *     </CoreAdminContext>\n * );\n *\n * const UI = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <CoreAdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </CoreAdminUI>\n *     );\n * };\n */\n\nvar CoreAdmin = function (props) {\n  var appLayout = props.appLayout,\n      authProvider = props.authProvider,\n      catchAll = props.catchAll,\n      children = props.children,\n      customReducers = props.customReducers,\n      _a = props.customRoutes,\n      customRoutes = _a === void 0 ? [] : _a,\n      customSagas = props.customSagas,\n      dashboard = props.dashboard,\n      dataProvider = props.dataProvider,\n      disableTelemetry = props.disableTelemetry,\n      history = props.history,\n      i18nProvider = props.i18nProvider,\n      initialState = props.initialState,\n      layout = props.layout,\n      loading = props.loading,\n      loginPage = props.loginPage,\n      logoutButton = props.logoutButton,\n      menu = props.menu,\n      // deprecated, use a custom layout instead\n  theme = props.theme,\n      _b = props.title,\n      title = _b === void 0 ? 'React Admin' : _b;\n  return React.createElement(CoreAdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(CoreAdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined\n  }, children));\n};\n\nexport default CoreAdmin;","map":{"version":3,"names":["React","CoreAdminContext","CoreAdminUI","CoreAdmin","props","appLayout","authProvider","catchAll","children","customReducers","_a","customRoutes","customSagas","dashboard","dataProvider","disableTelemetry","history","i18nProvider","initialState","layout","loading","loginPage","logoutButton","menu","theme","_b","title","createElement","logout","undefined"],"sources":["/app/node_modules/ra-core/esm/core/CoreAdmin.js"],"sourcesContent":["import * as React from 'react';\nimport CoreAdminContext from './CoreAdminContext';\nimport CoreAdminUI from './CoreAdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <Core dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Core>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     CoreAdmin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdmin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </CoreAdmin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\n * import { useEffect, useState } from 'react';\n * import {\n *     CoreAdminContext,\n *     CoreAdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'ra-core';\n *\n * const App = () => (\n *     <CoreAdminContext dataProvider={myDataProvider}>\n *         <UI />\n *     </CoreAdminContext>\n * );\n *\n * const UI = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <CoreAdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </CoreAdminUI>\n *     );\n * };\n */\nvar CoreAdmin = function (props) {\n    var appLayout = props.appLayout, authProvider = props.authProvider, catchAll = props.catchAll, children = props.children, customReducers = props.customReducers, _a = props.customRoutes, customRoutes = _a === void 0 ? [] : _a, customSagas = props.customSagas, dashboard = props.dashboard, dataProvider = props.dataProvider, disableTelemetry = props.disableTelemetry, history = props.history, i18nProvider = props.i18nProvider, initialState = props.initialState, layout = props.layout, loading = props.loading, loginPage = props.loginPage, logoutButton = props.logoutButton, menu = props.menu, // deprecated, use a custom layout instead\n    theme = props.theme, _b = props.title, title = _b === void 0 ? 'React Admin' : _b;\n    return (React.createElement(CoreAdminContext, { authProvider: authProvider, dataProvider: dataProvider, i18nProvider: i18nProvider, history: history, customReducers: customReducers, customSagas: customSagas, initialState: initialState },\n        React.createElement(CoreAdminUI, { layout: appLayout || layout, customRoutes: customRoutes, dashboard: dashboard, disableTelemetry: disableTelemetry, menu: menu, catchAll: catchAll, theme: theme, title: title, loading: loading, loginPage: loginPage, logout: authProvider ? logoutButton : undefined }, children)));\n};\nexport default CoreAdmin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}