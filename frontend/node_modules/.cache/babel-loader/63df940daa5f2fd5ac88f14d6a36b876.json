{"ast":null,"code":"'use strict';\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\n\nmodule.exports = function ToLength(argument) {\n  var len = ToIntegerOrInfinity(argument);\n\n  if (len <= 0) {\n    return 0;\n  } // includes converting -0 to +0\n\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};","map":{"version":3,"names":["MAX_SAFE_INTEGER","require","ToIntegerOrInfinity","module","exports","ToLength","argument","len"],"sources":["/app/node_modules/es-abstract/2021/ToLength.js"],"sourcesContent":["'use strict';\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\n\nmodule.exports = function ToLength(argument) {\n\tvar len = ToIntegerOrInfinity(argument);\n\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\treturn len;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAA9B;;AAEA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAC5C,IAAIC,GAAG,GAAGL,mBAAmB,CAACI,QAAD,CAA7B;;EACA,IAAIC,GAAG,IAAI,CAAX,EAAc;IAAE,OAAO,CAAP;EAAW,CAFiB,CAEhB;;;EAC5B,IAAIA,GAAG,GAAGP,gBAAV,EAA4B;IAAE,OAAOA,gBAAP;EAA0B;;EACxD,OAAOO,GAAP;AACA,CALD"},"metadata":{},"sourceType":"script"}