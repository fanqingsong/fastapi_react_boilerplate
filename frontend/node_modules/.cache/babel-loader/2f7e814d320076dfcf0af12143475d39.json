{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport validateResponseFormat from '../validateResponseFormat';\nimport getFetchType from '../getFetchType';\nimport { startOptimisticMode, stopOptimisticMode } from '../../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START } from '../../actions/fetchActions';\nimport { replayStackedCalls } from './stackedCalls';\n/**\n * In optimistic mode, the useDataProvider hook dispatches an optimistic action\n * and executes the success side effects right away. Then it immediately calls\n * the dataProvider.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\n\nexport var performOptimisticQuery = function (_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied,\n      allArguments = _a.allArguments;\n  dispatch(startOptimisticMode());\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  dispatch({\n    type: action + \"_OPTIMISTIC\",\n    payload: payload,\n    meta: {\n      resource: resource,\n      fetch: getFetchType(type),\n      optimistic: true\n    }\n  });\n  onSuccess && onSuccess({});\n  setTimeout(function () {\n    dispatch(stopOptimisticMode());\n    dispatch({\n      type: action + \"_LOADING\",\n      payload: payload,\n      meta: __assign({\n        resource: resource\n      }, rest)\n    });\n    dispatch({\n      type: FETCH_START\n    });\n\n    try {\n      dataProvider[type].apply(dataProvider, typeof resource !== 'undefined' ? [resource, payload] : allArguments).then(function (response) {\n        if (process.env.NODE_ENV !== 'production') {\n          validateResponseFormat(response, type);\n        }\n\n        dispatch({\n          type: action + \"_SUCCESS\",\n          payload: response,\n          requestPayload: payload,\n          meta: __assign(__assign({}, rest), {\n            resource: resource,\n            fetchResponse: getFetchType(type),\n            fetchStatus: FETCH_END\n          })\n        });\n        dispatch({\n          type: FETCH_END\n        });\n        replayStackedCalls();\n      }).catch(function (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(error);\n        }\n\n        return logoutIfAccessDenied(error).then(function (loggedOut) {\n          if (loggedOut) {\n            dispatch({\n              type: FETCH_END\n            });\n            return;\n          }\n\n          dispatch({\n            type: action + \"_FAILURE\",\n            error: error.message ? error.message : error,\n            payload: error.body ? error.body : null,\n            requestPayload: payload,\n            meta: __assign(__assign({}, rest), {\n              resource: resource,\n              fetchResponse: getFetchType(type),\n              fetchStatus: FETCH_ERROR\n            })\n          });\n          dispatch({\n            type: FETCH_ERROR,\n            error: error\n          });\n          onFailure && onFailure(error);\n        });\n      });\n    } catch (e) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(e);\n      }\n\n      throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n    }\n  });\n  return Promise.resolve({});\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","validateResponseFormat","getFetchType","startOptimisticMode","stopOptimisticMode","FETCH_END","FETCH_ERROR","FETCH_START","replayStackedCalls","performOptimisticQuery","_a","type","payload","resource","action","rest","onSuccess","onFailure","dataProvider","dispatch","logoutIfAccessDenied","allArguments","meta","fetch","optimistic","setTimeout","then","response","process","env","NODE_ENV","requestPayload","fetchResponse","fetchStatus","catch","error","console","loggedOut","message","body","e","Error","Promise","resolve"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-core/esm/dataProvider/performQuery/performOptimisticQuery.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport validateResponseFormat from '../validateResponseFormat';\nimport getFetchType from '../getFetchType';\nimport { startOptimisticMode, stopOptimisticMode, } from '../../actions/undoActions';\nimport { FETCH_END, FETCH_ERROR, FETCH_START, } from '../../actions/fetchActions';\nimport { replayStackedCalls } from './stackedCalls';\n/**\n * In optimistic mode, the useDataProvider hook dispatches an optimistic action\n * and executes the success side effects right away. Then it immediately calls\n * the dataProvider.\n *\n * We call that \"optimistic\" because the hook returns a resolved Promise\n * immediately (although it has an empty value). That only works if the\n * caller reads the result from the Redux store, not from the Promise.\n */\nexport var performOptimisticQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied, allArguments = _a.allArguments;\n    dispatch(startOptimisticMode());\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    dispatch({\n        type: action + \"_OPTIMISTIC\",\n        payload: payload,\n        meta: {\n            resource: resource,\n            fetch: getFetchType(type),\n            optimistic: true,\n        },\n    });\n    onSuccess && onSuccess({});\n    setTimeout(function () {\n        dispatch(stopOptimisticMode());\n        dispatch({\n            type: action + \"_LOADING\",\n            payload: payload,\n            meta: __assign({ resource: resource }, rest),\n        });\n        dispatch({ type: FETCH_START });\n        try {\n            dataProvider[type]\n                .apply(dataProvider, typeof resource !== 'undefined'\n                ? [resource, payload]\n                : allArguments)\n                .then(function (response) {\n                if (process.env.NODE_ENV !== 'production') {\n                    validateResponseFormat(response, type);\n                }\n                dispatch({\n                    type: action + \"_SUCCESS\",\n                    payload: response,\n                    requestPayload: payload,\n                    meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END }),\n                });\n                dispatch({ type: FETCH_END });\n                replayStackedCalls();\n            })\n                .catch(function (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                return logoutIfAccessDenied(error).then(function (loggedOut) {\n                    if (loggedOut) {\n                        dispatch({ type: FETCH_END });\n                        return;\n                    }\n                    dispatch({\n                        type: action + \"_FAILURE\",\n                        error: error.message ? error.message : error,\n                        payload: error.body ? error.body : null,\n                        requestPayload: payload,\n                        meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_ERROR }),\n                    });\n                    dispatch({ type: FETCH_ERROR, error: error });\n                    onFailure && onFailure(error);\n                });\n            });\n        }\n        catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(e);\n            }\n            throw new Error('The dataProvider threw an error. It should return a rejected Promise instead.');\n        }\n    });\n    return Promise.resolve({});\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}