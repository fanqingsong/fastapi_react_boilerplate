{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport { Button, Menu, MenuItem, Tooltip, IconButton, useMediaQuery } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { shallowEqual } from 'react-redux';\nimport { useListSortContext, useTranslate, getFieldLabelTranslationArgs } from 'ra-core';\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions = props => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton basePath={props.basePath} />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\n\nvar SortButton = function (props) {\n  var fields = props.fields,\n      _a = props.label,\n      label = _a === void 0 ? 'ra.sort.sort_by' : _a,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b;\n\n  var _c = useListSortContext(),\n      resource = _c.resource,\n      currentSort = _c.currentSort,\n      setSort = _c.setSort;\n\n  var translate = useTranslate();\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('xs');\n  });\n\n  var _d = React.useState(null),\n      anchorEl = _d[0],\n      setAnchorEl = _d[1];\n\n  var handleClick = function (event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function () {\n    setAnchorEl(null);\n  };\n\n  var handleChangeSort = function (event) {\n    var field = event.currentTarget.dataset.sort;\n    setSort(field, field === currentSort.field ? inverseOrder(currentSort.order) : 'ASC');\n    setAnchorEl(null);\n  };\n\n  var buttonLabel = translate(label, {\n    field: translate.apply(void 0, getFieldLabelTranslationArgs({\n      resource: resource,\n      source: currentSort.field\n    })),\n    order: translate(\"ra.sort.\" + currentSort.order),\n    _: label\n  });\n  return React.createElement(React.Fragment, null, isXSmall ? React.createElement(Tooltip, {\n    title: buttonLabel\n  }, React.createElement(IconButton, {\n    \"aria-label\": buttonLabel,\n    color: \"primary\",\n    onClick: handleClick\n  }, icon)) : React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"primary\",\n    onClick: handleClick,\n    startIcon: icon,\n    endIcon: React.createElement(ArrowDropDownIcon, null),\n    size: \"small\"\n  }, buttonLabel), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, fields.map(function (field) {\n    return React.createElement(MenuItem, {\n      onClick: handleChangeSort,\n      \"data-sort\": field,\n      key: field\n    }, translate.apply(void 0, getFieldLabelTranslationArgs({\n      resource: resource,\n      source: field\n    })), ' ', translate(\"ra.sort.\" + (currentSort.field === field ? inverseOrder(currentSort.order) : 'ASC')));\n  })));\n};\n\nvar defaultIcon = React.createElement(SortIcon, null);\n\nvar inverseOrder = function (sort) {\n  return sort === 'ASC' ? 'DESC' : 'ASC';\n};\n\nvar arePropsEqual = function (prevProps, nextProps) {\n  return shallowEqual(prevProps.fields, nextProps.fields);\n};\n\nexport default memo(SortButton, arePropsEqual);","map":{"version":3,"names":["React","memo","Button","Menu","MenuItem","Tooltip","IconButton","useMediaQuery","SortIcon","ArrowDropDownIcon","shallowEqual","useListSortContext","useTranslate","getFieldLabelTranslationArgs","SortButton","props","fields","_a","label","_b","icon","defaultIcon","_c","resource","currentSort","setSort","translate","isXSmall","theme","breakpoints","down","_d","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleChangeSort","field","dataset","sort","inverseOrder","order","buttonLabel","apply","source","_","createElement","Fragment","title","color","onClick","startIcon","endIcon","size","id","keepMounted","open","Boolean","onClose","map","key","arePropsEqual","prevProps","nextProps"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-ui-materialui/esm/button/SortButton.js"],"sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport { Button, Menu, MenuItem, Tooltip, IconButton, useMediaQuery, } from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { shallowEqual } from 'react-redux';\nimport { useListSortContext, useTranslate, getFieldLabelTranslationArgs, } from 'ra-core';\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions = props => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton basePath={props.basePath} />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\nvar SortButton = function (props) {\n    var fields = props.fields, _a = props.label, label = _a === void 0 ? 'ra.sort.sort_by' : _a, _b = props.icon, icon = _b === void 0 ? defaultIcon : _b;\n    var _c = useListSortContext(), resource = _c.resource, currentSort = _c.currentSort, setSort = _c.setSort;\n    var translate = useTranslate();\n    var isXSmall = useMediaQuery(function (theme) {\n        return theme.breakpoints.down('xs');\n    });\n    var _d = React.useState(null), anchorEl = _d[0], setAnchorEl = _d[1];\n    var handleClick = function (event) {\n        setAnchorEl(event.currentTarget);\n    };\n    var handleClose = function () {\n        setAnchorEl(null);\n    };\n    var handleChangeSort = function (event) {\n        var field = event.currentTarget.dataset.sort;\n        setSort(field, field === currentSort.field\n            ? inverseOrder(currentSort.order)\n            : 'ASC');\n        setAnchorEl(null);\n    };\n    var buttonLabel = translate(label, {\n        field: translate.apply(void 0, getFieldLabelTranslationArgs({\n            resource: resource,\n            source: currentSort.field,\n        })),\n        order: translate(\"ra.sort.\" + currentSort.order),\n        _: label,\n    });\n    return (React.createElement(React.Fragment, null,\n        isXSmall ? (React.createElement(Tooltip, { title: buttonLabel },\n            React.createElement(IconButton, { \"aria-label\": buttonLabel, color: \"primary\", onClick: handleClick }, icon))) : (React.createElement(Button, { \"aria-controls\": \"simple-menu\", \"aria-haspopup\": \"true\", color: \"primary\", onClick: handleClick, startIcon: icon, endIcon: React.createElement(ArrowDropDownIcon, null), size: \"small\" }, buttonLabel)),\n        React.createElement(Menu, { id: \"simple-menu\", anchorEl: anchorEl, keepMounted: true, open: Boolean(anchorEl), onClose: handleClose }, fields.map(function (field) { return (React.createElement(MenuItem, { onClick: handleChangeSort, \"data-sort\": field, key: field },\n            translate.apply(void 0, getFieldLabelTranslationArgs({\n                resource: resource,\n                source: field,\n            })),\n            ' ',\n            translate(\"ra.sort.\" + (currentSort.field === field\n                ? inverseOrder(currentSort.order)\n                : 'ASC')))); }))));\n};\nvar defaultIcon = React.createElement(SortIcon, null);\nvar inverseOrder = function (sort) { return (sort === 'ASC' ? 'DESC' : 'ASC'); };\nvar arePropsEqual = function (prevProps, nextProps) {\n    return shallowEqual(prevProps.fields, nextProps.fields);\n};\nexport default memo(SortButton, arePropsEqual);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,UAA1C,EAAsDC,aAAtD,QAA4E,mBAA5E;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,kBAAT,EAA6BC,YAA7B,EAA2CC,4BAA3C,QAAgF,SAAhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,UAAUC,KAAV,EAAiB;EAC9B,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IAA2BC,EAAE,GAAGF,KAAK,CAACG,KAAtC;EAAA,IAA6CA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,iBAAhB,GAAoCA,EAAzF;EAAA,IAA6FE,EAAE,GAAGJ,KAAK,CAACK,IAAxG;EAAA,IAA8GA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBE,WAAhB,GAA8BF,EAAnJ;;EACA,IAAIG,EAAE,GAAGX,kBAAkB,EAA3B;EAAA,IAA+BY,QAAQ,GAAGD,EAAE,CAACC,QAA7C;EAAA,IAAuDC,WAAW,GAAGF,EAAE,CAACE,WAAxE;EAAA,IAAqFC,OAAO,GAAGH,EAAE,CAACG,OAAlG;;EACA,IAAIC,SAAS,GAAGd,YAAY,EAA5B;EACA,IAAIe,QAAQ,GAAGpB,aAAa,CAAC,UAAUqB,KAAV,EAAiB;IAC1C,OAAOA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAP;EACH,CAF2B,CAA5B;;EAGA,IAAIC,EAAE,GAAG/B,KAAK,CAACgC,QAAN,CAAe,IAAf,CAAT;EAAA,IAA+BC,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAA5C;EAAA,IAAiDG,WAAW,GAAGH,EAAE,CAAC,CAAD,CAAjE;;EACA,IAAII,WAAW,GAAG,UAAUC,KAAV,EAAiB;IAC/BF,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;EACH,CAFD;;EAGA,IAAIC,WAAW,GAAG,YAAY;IAC1BJ,WAAW,CAAC,IAAD,CAAX;EACH,CAFD;;EAGA,IAAIK,gBAAgB,GAAG,UAAUH,KAAV,EAAiB;IACpC,IAAII,KAAK,GAAGJ,KAAK,CAACC,aAAN,CAAoBI,OAApB,CAA4BC,IAAxC;IACAjB,OAAO,CAACe,KAAD,EAAQA,KAAK,KAAKhB,WAAW,CAACgB,KAAtB,GACTG,YAAY,CAACnB,WAAW,CAACoB,KAAb,CADH,GAET,KAFC,CAAP;IAGAV,WAAW,CAAC,IAAD,CAAX;EACH,CAND;;EAOA,IAAIW,WAAW,GAAGnB,SAAS,CAACR,KAAD,EAAQ;IAC/BsB,KAAK,EAAEd,SAAS,CAACoB,KAAV,CAAgB,KAAK,CAArB,EAAwBjC,4BAA4B,CAAC;MACxDU,QAAQ,EAAEA,QAD8C;MAExDwB,MAAM,EAAEvB,WAAW,CAACgB;IAFoC,CAAD,CAApD,CADwB;IAK/BI,KAAK,EAAElB,SAAS,CAAC,aAAaF,WAAW,CAACoB,KAA1B,CALe;IAM/BI,CAAC,EAAE9B;EAN4B,CAAR,CAA3B;EAQA,OAAQlB,KAAK,CAACiD,aAAN,CAAoBjD,KAAK,CAACkD,QAA1B,EAAoC,IAApC,EACJvB,QAAQ,GAAI3B,KAAK,CAACiD,aAAN,CAAoB5C,OAApB,EAA6B;IAAE8C,KAAK,EAAEN;EAAT,CAA7B,EACR7C,KAAK,CAACiD,aAAN,CAAoB3C,UAApB,EAAgC;IAAE,cAAcuC,WAAhB;IAA6BO,KAAK,EAAE,SAApC;IAA+CC,OAAO,EAAElB;EAAxD,CAAhC,EAAuGf,IAAvG,CADQ,CAAJ,GAC8GpB,KAAK,CAACiD,aAAN,CAAoB/C,MAApB,EAA4B;IAAE,iBAAiB,aAAnB;IAAkC,iBAAiB,MAAnD;IAA2DkD,KAAK,EAAE,SAAlE;IAA6EC,OAAO,EAAElB,WAAtF;IAAmGmB,SAAS,EAAElC,IAA9G;IAAoHmC,OAAO,EAAEvD,KAAK,CAACiD,aAAN,CAAoBxC,iBAApB,EAAuC,IAAvC,CAA7H;IAA2K+C,IAAI,EAAE;EAAjL,CAA5B,EAAwNX,WAAxN,CAFlH,EAGJ7C,KAAK,CAACiD,aAAN,CAAoB9C,IAApB,EAA0B;IAAEsD,EAAE,EAAE,aAAN;IAAqBxB,QAAQ,EAAEA,QAA/B;IAAyCyB,WAAW,EAAE,IAAtD;IAA4DC,IAAI,EAAEC,OAAO,CAAC3B,QAAD,CAAzE;IAAqF4B,OAAO,EAAEvB;EAA9F,CAA1B,EAAuItB,MAAM,CAAC8C,GAAP,CAAW,UAAUtB,KAAV,EAAiB;IAAE,OAAQxC,KAAK,CAACiD,aAAN,CAAoB7C,QAApB,EAA8B;MAAEiD,OAAO,EAAEd,gBAAX;MAA6B,aAAaC,KAA1C;MAAiDuB,GAAG,EAAEvB;IAAtD,CAA9B,EACzKd,SAAS,CAACoB,KAAV,CAAgB,KAAK,CAArB,EAAwBjC,4BAA4B,CAAC;MACjDU,QAAQ,EAAEA,QADuC;MAEjDwB,MAAM,EAAEP;IAFyC,CAAD,CAApD,CADyK,EAKzK,GALyK,EAMzKd,SAAS,CAAC,cAAcF,WAAW,CAACgB,KAAZ,KAAsBA,KAAtB,GAClBG,YAAY,CAACnB,WAAW,CAACoB,KAAb,CADM,GAElB,KAFI,CAAD,CANgK,CAAR;EAQ/I,CARiH,CAAvI,CAHI,CAAR;AAYH,CAzCD;;AA0CA,IAAIvB,WAAW,GAAGrB,KAAK,CAACiD,aAAN,CAAoBzC,QAApB,EAA8B,IAA9B,CAAlB;;AACA,IAAImC,YAAY,GAAG,UAAUD,IAAV,EAAgB;EAAE,OAAQA,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B,KAAlC;AAA2C,CAAhF;;AACA,IAAIsB,aAAa,GAAG,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;EAChD,OAAOxD,YAAY,CAACuD,SAAS,CAACjD,MAAX,EAAmBkD,SAAS,CAAClD,MAA7B,CAAnB;AACH,CAFD;;AAGA,eAAef,IAAI,CAACa,UAAD,EAAakD,aAAb,CAAnB"},"metadata":{},"sourceType":"module"}