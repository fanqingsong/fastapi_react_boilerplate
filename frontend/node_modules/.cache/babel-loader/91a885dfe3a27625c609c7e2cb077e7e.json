{"ast":null,"code":"/**\n * Fork of the https://github.com/ignatevdev/final-form-submit-errors\n *\n * In react-admin, errors might be objects with `message` and `args` properties which\n * are used for translation.\n * The original final-form-submit-errors mutator was considering those errors as form\n * nested field like `name.message` and `name.args`.\n * This version detects those objects.\n */\nexport function resetSubmitErrors(_a, state, _b) {\n  var _c = _a[0],\n      prev = _c.prev,\n      current = _c.current;\n  var getIn = _b.getIn,\n      setIn = _b.setIn; // Reset the general submit error on any value change\n\n  if (state.formState.submitError) {\n    delete state.formState.submitError;\n  }\n\n  if (!isObjectEmpty(state.formState.submitErrors)) {\n    // Flatten nested errors object for easier comparison\n    var flatErrors = flatten(state.formState.submitErrors);\n    var changed_1 = []; // Iterate over each error\n\n    Object.keys(flatErrors).forEach(function (key) {\n      // Compare the value for the error field path\n      if (getIn(prev, key) !== getIn(current, key)) {\n        changed_1.push(key);\n      }\n    }); // Reset the error on value change\n\n    if (changed_1.length) {\n      var newErrors_1 = state.formState.submitErrors;\n      changed_1.forEach(function (key) {\n        newErrors_1 = setIn(newErrors_1, key, null);\n      }); // Clear submit errors from empty objects and arrays\n\n      var cleanErrors = clean(newErrors_1);\n      state.formState.submitErrors = cleanErrors;\n    }\n  }\n}\nexport function clean(obj) {\n  var newObj = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] && typeof obj[key] === 'object') {\n      var newVal = clean(obj[key]);\n\n      if (!isObjectEmpty(newVal) && newVal.length !== 0) {\n        newObj[key] = newVal;\n      }\n    } else if (obj[key] !== null) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\nexport function flatten(obj) {\n  var toReturn = {};\n\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n\n    if (typeof obj[i] === 'object' && obj[i] !== null && !isValidationError(obj[i])) {\n      var flatObject = flatten(obj[i]);\n\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) {\n          continue;\n        } // Make a bracket array notation like some[1].array[0]\n\n\n        var key = (i + \".\" + x).split('.').reduce(function (str, value) {\n          if (/^\\[\\d\\]/.test(value)) {\n            return \"\" + str + value;\n          }\n\n          if (!isNaN(Number(value))) {\n            return str + \"[\" + value + \"]\";\n          }\n\n          if (str) {\n            return str + \".\" + value;\n          }\n\n          return value;\n        }, '');\n        toReturn[key] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = obj[i];\n    }\n  }\n\n  return toReturn;\n}\nexport var isValidationError = function (obj) {\n  return obj.message && obj.args;\n};\nexport function isObjectEmpty(obj) {\n  if (!obj) {\n    return true;\n  }\n\n  return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexport default {\n  resetSubmitErrors: resetSubmitErrors\n};","map":{"version":3,"names":["resetSubmitErrors","_a","state","_b","_c","prev","current","getIn","setIn","formState","submitError","isObjectEmpty","submitErrors","flatErrors","flatten","changed_1","Object","keys","forEach","key","push","length","newErrors_1","cleanErrors","clean","obj","newObj","Array","isArray","newVal","toReturn","i","hasOwnProperty","isValidationError","flatObject","x","split","reduce","str","value","test","isNaN","Number","message","args","entries","constructor"],"sources":["/app/node_modules/ra-core/esm/form/submitErrorsMutators.js"],"sourcesContent":["/**\n * Fork of the https://github.com/ignatevdev/final-form-submit-errors\n *\n * In react-admin, errors might be objects with `message` and `args` properties which\n * are used for translation.\n * The original final-form-submit-errors mutator was considering those errors as form\n * nested field like `name.message` and `name.args`.\n * This version detects those objects.\n */\nexport function resetSubmitErrors(_a, state, _b) {\n    var _c = _a[0], prev = _c.prev, current = _c.current;\n    var getIn = _b.getIn, setIn = _b.setIn;\n    // Reset the general submit error on any value change\n    if (state.formState.submitError) {\n        delete state.formState.submitError;\n    }\n    if (!isObjectEmpty(state.formState.submitErrors)) {\n        // Flatten nested errors object for easier comparison\n        var flatErrors = flatten(state.formState.submitErrors);\n        var changed_1 = [];\n        // Iterate over each error\n        Object.keys(flatErrors).forEach(function (key) {\n            // Compare the value for the error field path\n            if (getIn(prev, key) !== getIn(current, key)) {\n                changed_1.push(key);\n            }\n        });\n        // Reset the error on value change\n        if (changed_1.length) {\n            var newErrors_1 = state.formState.submitErrors;\n            changed_1.forEach(function (key) {\n                newErrors_1 = setIn(newErrors_1, key, null);\n            });\n            // Clear submit errors from empty objects and arrays\n            var cleanErrors = clean(newErrors_1);\n            state.formState.submitErrors = cleanErrors;\n        }\n    }\n}\nexport function clean(obj) {\n    var newObj = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach(function (key) {\n        if (obj[key] && typeof obj[key] === 'object') {\n            var newVal = clean(obj[key]);\n            if (!isObjectEmpty(newVal) && newVal.length !== 0) {\n                newObj[key] = newVal;\n            }\n        }\n        else if (obj[key] !== null) {\n            newObj[key] = obj[key];\n        }\n    });\n    return newObj;\n}\nexport function flatten(obj) {\n    var toReturn = {};\n    for (var i in obj) {\n        if (!obj.hasOwnProperty(i)) {\n            continue;\n        }\n        if (typeof obj[i] === 'object' &&\n            obj[i] !== null &&\n            !isValidationError(obj[i])) {\n            var flatObject = flatten(obj[i]);\n            for (var x in flatObject) {\n                if (!flatObject.hasOwnProperty(x)) {\n                    continue;\n                }\n                // Make a bracket array notation like some[1].array[0]\n                var key = (i + \".\" + x).split('.').reduce(function (str, value) {\n                    if (/^\\[\\d\\]/.test(value)) {\n                        return \"\" + str + value;\n                    }\n                    if (!isNaN(Number(value))) {\n                        return str + \"[\" + value + \"]\";\n                    }\n                    if (str) {\n                        return str + \".\" + value;\n                    }\n                    return value;\n                }, '');\n                toReturn[key] = flatObject[x];\n            }\n        }\n        else {\n            toReturn[i] = obj[i];\n        }\n    }\n    return toReturn;\n}\nexport var isValidationError = function (obj) { return obj.message && obj.args; };\nexport function isObjectEmpty(obj) {\n    if (!obj) {\n        return true;\n    }\n    return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexport default {\n    resetSubmitErrors: resetSubmitErrors,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}