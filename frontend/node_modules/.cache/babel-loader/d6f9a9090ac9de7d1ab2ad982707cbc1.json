{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var removeTags = function (input) {\n  return input ? input.replace(/<[^>]+>/gm, '') : '';\n};\nvar RichTextField = memo(function (props) {\n  var className = props.className,\n      emptyText = props.emptyText,\n      source = props.source,\n      stripTags = props.stripTags,\n      rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\"]);\n\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  return React.createElement(Typography, __assign({\n    className: className,\n    variant: \"body2\",\n    component: \"span\"\n  }, sanitizeFieldRestProps(rest)), value == null && emptyText ? emptyText : stripTags ? removeTags(value) : React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: value\n    }\n  }));\n});\nRichTextField.defaultProps = {\n  addLabel: true,\n  stripTags: false\n};\nRichTextField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  stripTags: PropTypes.bool\n});\nRichTextField.displayName = 'RichTextField';\nexport default RichTextField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","PropTypes","get","Typography","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","removeTags","input","replace","RichTextField","props","className","emptyText","source","stripTags","rest","record","value","createElement","variant","component","dangerouslySetInnerHTML","__html","defaultProps","addLabel","propTypes","bool","displayName"],"sources":["/app/node_modules/ra-ui-materialui/esm/field/RichTextField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var removeTags = function (input) {\n    return input ? input.replace(/<[^>]+>/gm, '') : '';\n};\nvar RichTextField = memo(function (props) {\n    var className = props.className, emptyText = props.emptyText, source = props.source, stripTags = props.stripTags, rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\"]);\n    var record = useRecordContext(props);\n    var value = get(record, source);\n    return (React.createElement(Typography, __assign({ className: className, variant: \"body2\", component: \"span\" }, sanitizeFieldRestProps(rest)), value == null && emptyText ? (emptyText) : stripTags ? (removeTags(value)) : (React.createElement(\"span\", { dangerouslySetInnerHTML: { __html: value } }))));\n});\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\nRichTextField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), { stripTags: PropTypes.bool });\nRichTextField.displayName = 'RichTextField';\nexport default RichTextField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}