{"ast":null,"code":"import decodeJwt from 'jwt-decode';\nconst authProvider = {\n  login: _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData\n    });\n    return fetch(request).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(_ref2 => {\n      let {\n        access_token\n      } = _ref2;\n      const decodedToken = decodeJwt(access_token);\n\n      if (decodedToken.permissions !== 'admin') {\n        throw new Error('Forbidden');\n      }\n\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('permissions', decodedToken.permissions);\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: error => {\n    const status = error.status;\n\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n\n    return Promise.resolve();\n  },\n  checkAuth: () => localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject(); // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  }\n};\nexport default authProvider;","map":{"version":3,"names":["decodeJwt","authProvider","login","username","password","formData","FormData","append","request","Request","method","body","fetch","then","response","status","Error","statusText","json","access_token","decodedToken","permissions","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getItem","getPermissions","role"],"sources":["/home/lightsong/workspace/freact/frontend/src/admin/authProvider.ts"],"sourcesContent":["import decodeJwt from 'jwt-decode';\n\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions !== 'admin') {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAOA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,QAA2C;IAAA,IAA1C;MAAEC,QAAF;MAAYC;IAAZ,CAA0C;IAChD,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;IACAD,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,QAA5B;IACAE,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,QAA5B;IACA,MAAMI,OAAO,GAAG,IAAIC,OAAJ,CAAY,YAAZ,EAA0B;MACxCC,MAAM,EAAE,MADgC;MAExCC,IAAI,EAAEN;IAFkC,CAA1B,CAAhB;IAIA,OAAOO,KAAK,CAACJ,OAAD,CAAL,CACJK,IADI,CACEC,QAAD,IAAc;MAClB,IAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAlB,IAAyBD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;QACnD,MAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;MACD;;MACD,OAAOH,QAAQ,CAACI,IAAT,EAAP;IACD,CANI,EAOJL,IAPI,CAOC,SAAsB;MAAA,IAArB;QAAEM;MAAF,CAAqB;MAC1B,MAAMC,YAAiB,GAAGpB,SAAS,CAACmB,YAAD,CAAnC;;MACA,IAAIC,YAAY,CAACC,WAAb,KAA6B,OAAjC,EAA0C;QACxC,MAAM,IAAIL,KAAJ,CAAU,WAAV,CAAN;MACD;;MACDM,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,YAA9B;MACAG,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,YAAY,CAACC,WAAjD;IACD,CAdI,CAAP;EAeD,CAxBkB;EAyBnBG,MAAM,EAAE,MAAM;IACZF,YAAY,CAACG,UAAb,CAAwB,OAAxB;IACAH,YAAY,CAACG,UAAb,CAAwB,aAAxB;IACA,OAAOC,OAAO,CAACC,OAAR,EAAP;EACD,CA7BkB;EA8BnBC,UAAU,EAAGC,KAAD,IAA+B;IACzC,MAAMd,MAAM,GAAGc,KAAK,CAACd,MAArB;;IACA,IAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;MACpCO,YAAY,CAACG,UAAb,CAAwB,OAAxB;MACA,OAAOC,OAAO,CAACI,MAAR,EAAP;IACD;;IACD,OAAOJ,OAAO,CAACC,OAAR,EAAP;EACD,CArCkB;EAsCnBI,SAAS,EAAE,MACTT,YAAY,CAACU,OAAb,CAAqB,OAArB,IAAgCN,OAAO,CAACC,OAAR,EAAhC,GAAoDD,OAAO,CAACI,MAAR,EAvCnC;EAwCnBG,cAAc,EAAE,MAAM;IACpB,MAAMC,IAAI,GAAGZ,YAAY,CAACU,OAAb,CAAqB,aAArB,CAAb;IACA,OAAOE,IAAI,GAAGR,OAAO,CAACC,OAAR,CAAgBO,IAAhB,CAAH,GAA2BR,OAAO,CAACI,MAAR,EAAtC,CAFoB,CAGpB;EACD;AA5CkB,CAArB;AA+CA,eAAe7B,YAAf"},"metadata":{},"sourceType":"module"}