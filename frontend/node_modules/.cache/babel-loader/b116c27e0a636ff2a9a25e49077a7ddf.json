{"ast":null,"code":"import { performOptimisticQuery } from './performOptimisticQuery';\nimport { performUndoableQuery } from './performUndoableQuery';\nimport { performPessimisticQuery } from './performPessimisticQuery';\nimport { answerWithCache } from './answerWithCache';\nimport { canReplyWithCache } from '../replyWithCache';\n/**\n * Execute a dataProvider call\n *\n * Delegates execution to cache, optimistic, undoable, or pessimistic queries\n *\n * @see useDataProvider\n */\n\nexport var doQuery = function (_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      onFailure = _a.onFailure,\n      dataProvider = _a.dataProvider,\n      dispatch = _a.dispatch,\n      logoutIfAccessDenied = _a.logoutIfAccessDenied,\n      allArguments = _a.allArguments,\n      store = _a.store,\n      mutationMode = _a.mutationMode;\n  var resourceState = store.getState().admin.resources[resource];\n\n  if (canReplyWithCache(type, payload, resourceState)) {\n    return answerWithCache({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      resourceState: resourceState,\n      dispatch: dispatch\n    });\n  } else if (mutationMode === 'optimistic') {\n    return performOptimisticQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  } else if (mutationMode === 'undoable') {\n    return performUndoableQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  } else {\n    return performPessimisticQuery({\n      type: type,\n      payload: payload,\n      resource: resource,\n      action: action,\n      rest: rest,\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      dataProvider: dataProvider,\n      dispatch: dispatch,\n      logoutIfAccessDenied: logoutIfAccessDenied,\n      allArguments: allArguments\n    });\n  }\n};","map":{"version":3,"names":["performOptimisticQuery","performUndoableQuery","performPessimisticQuery","answerWithCache","canReplyWithCache","doQuery","_a","type","payload","resource","action","rest","onSuccess","onFailure","dataProvider","dispatch","logoutIfAccessDenied","allArguments","store","mutationMode","resourceState","getState","admin","resources"],"sources":["/app/node_modules/ra-core/esm/dataProvider/performQuery/doQuery.js"],"sourcesContent":["import { performOptimisticQuery } from './performOptimisticQuery';\nimport { performUndoableQuery } from './performUndoableQuery';\nimport { performPessimisticQuery } from './performPessimisticQuery';\nimport { answerWithCache } from './answerWithCache';\nimport { canReplyWithCache } from '../replyWithCache';\n/**\n * Execute a dataProvider call\n *\n * Delegates execution to cache, optimistic, undoable, or pessimistic queries\n *\n * @see useDataProvider\n */\nexport var doQuery = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, onFailure = _a.onFailure, dataProvider = _a.dataProvider, dispatch = _a.dispatch, logoutIfAccessDenied = _a.logoutIfAccessDenied, allArguments = _a.allArguments, store = _a.store, mutationMode = _a.mutationMode;\n    var resourceState = store.getState().admin.resources[resource];\n    if (canReplyWithCache(type, payload, resourceState)) {\n        return answerWithCache({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            resourceState: resourceState,\n            dispatch: dispatch,\n        });\n    }\n    else if (mutationMode === 'optimistic') {\n        return performOptimisticQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n    else if (mutationMode === 'undoable') {\n        return performUndoableQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n    else {\n        return performPessimisticQuery({\n            type: type,\n            payload: payload,\n            resource: resource,\n            action: action,\n            rest: rest,\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            dataProvider: dataProvider,\n            dispatch: dispatch,\n            logoutIfAccessDenied: logoutIfAccessDenied,\n            allArguments: allArguments,\n        });\n    }\n};\n"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,0BAAvC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,OAAO,GAAG,UAAUC,EAAV,EAAc;EAC/B,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;EAAA,IAAoBC,OAAO,GAAGF,EAAE,CAACE,OAAjC;EAAA,IAA0CC,QAAQ,GAAGH,EAAE,CAACG,QAAxD;EAAA,IAAkEC,MAAM,GAAGJ,EAAE,CAACI,MAA9E;EAAA,IAAsFC,IAAI,GAAGL,EAAE,CAACK,IAAhG;EAAA,IAAsGC,SAAS,GAAGN,EAAE,CAACM,SAArH;EAAA,IAAgIC,SAAS,GAAGP,EAAE,CAACO,SAA/I;EAAA,IAA0JC,YAAY,GAAGR,EAAE,CAACQ,YAA5K;EAAA,IAA0LC,QAAQ,GAAGT,EAAE,CAACS,QAAxM;EAAA,IAAkNC,oBAAoB,GAAGV,EAAE,CAACU,oBAA5O;EAAA,IAAkQC,YAAY,GAAGX,EAAE,CAACW,YAApR;EAAA,IAAkSC,KAAK,GAAGZ,EAAE,CAACY,KAA7S;EAAA,IAAoTC,YAAY,GAAGb,EAAE,CAACa,YAAtU;EACA,IAAIC,aAAa,GAAGF,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuBC,SAAvB,CAAiCd,QAAjC,CAApB;;EACA,IAAIL,iBAAiB,CAACG,IAAD,EAAOC,OAAP,EAAgBY,aAAhB,CAArB,EAAqD;IACjD,OAAOjB,eAAe,CAAC;MACnBI,IAAI,EAAEA,IADa;MAEnBC,OAAO,EAAEA,OAFU;MAGnBC,QAAQ,EAAEA,QAHS;MAInBC,MAAM,EAAEA,MAJW;MAKnBC,IAAI,EAAEA,IALa;MAMnBC,SAAS,EAAEA,SANQ;MAOnBQ,aAAa,EAAEA,aAPI;MAQnBL,QAAQ,EAAEA;IARS,CAAD,CAAtB;EAUH,CAXD,MAYK,IAAII,YAAY,KAAK,YAArB,EAAmC;IACpC,OAAOnB,sBAAsB,CAAC;MAC1BO,IAAI,EAAEA,IADoB;MAE1BC,OAAO,EAAEA,OAFiB;MAG1BC,QAAQ,EAAEA,QAHgB;MAI1BC,MAAM,EAAEA,MAJkB;MAK1BC,IAAI,EAAEA,IALoB;MAM1BC,SAAS,EAAEA,SANe;MAO1BC,SAAS,EAAEA,SAPe;MAQ1BC,YAAY,EAAEA,YARY;MAS1BC,QAAQ,EAAEA,QATgB;MAU1BC,oBAAoB,EAAEA,oBAVI;MAW1BC,YAAY,EAAEA;IAXY,CAAD,CAA7B;EAaH,CAdI,MAeA,IAAIE,YAAY,KAAK,UAArB,EAAiC;IAClC,OAAOlB,oBAAoB,CAAC;MACxBM,IAAI,EAAEA,IADkB;MAExBC,OAAO,EAAEA,OAFe;MAGxBC,QAAQ,EAAEA,QAHc;MAIxBC,MAAM,EAAEA,MAJgB;MAKxBC,IAAI,EAAEA,IALkB;MAMxBC,SAAS,EAAEA,SANa;MAOxBC,SAAS,EAAEA,SAPa;MAQxBC,YAAY,EAAEA,YARU;MASxBC,QAAQ,EAAEA,QATc;MAUxBC,oBAAoB,EAAEA,oBAVE;MAWxBC,YAAY,EAAEA;IAXU,CAAD,CAA3B;EAaH,CAdI,MAeA;IACD,OAAOf,uBAAuB,CAAC;MAC3BK,IAAI,EAAEA,IADqB;MAE3BC,OAAO,EAAEA,OAFkB;MAG3BC,QAAQ,EAAEA,QAHiB;MAI3BC,MAAM,EAAEA,MAJmB;MAK3BC,IAAI,EAAEA,IALqB;MAM3BC,SAAS,EAAEA,SANgB;MAO3BC,SAAS,EAAEA,SAPgB;MAQ3BC,YAAY,EAAEA,YARa;MAS3BC,QAAQ,EAAEA,QATiB;MAU3BC,oBAAoB,EAAEA,oBAVK;MAW3BC,YAAY,EAAEA;IAXa,CAAD,CAA9B;EAaH;AACJ,CA5DM"},"metadata":{},"sourceType":"module"}