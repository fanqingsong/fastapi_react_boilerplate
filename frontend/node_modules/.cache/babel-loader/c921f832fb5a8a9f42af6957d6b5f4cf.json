{"ast":null,"code":"import { isValidElement, cloneElement, useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for choices handling.\n *\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n */\n\nvar useChoices = function (_a) {\n  var _b = _a.optionText,\n      optionText = _b === void 0 ? 'name' : _b,\n      _c = _a.optionValue,\n      optionValue = _c === void 0 ? 'id' : _c,\n      _d = _a.disableValue,\n      disableValue = _d === void 0 ? 'disabled' : _d,\n      _e = _a.translateChoice,\n      translateChoice = _e === void 0 ? true : _e;\n  var translate = useTranslate();\n  var getChoiceText = useCallback(function (choice) {\n    if (isValidElement(optionText)) {\n      return cloneElement(optionText, {\n        record: choice\n      });\n    }\n\n    var choiceName = typeof optionText === 'function' ? optionText(choice) : get(choice, optionText);\n    return isValidElement(choiceName) ? choiceName : translateChoice ? translate(choiceName, {\n      _: choiceName\n    }) : String(choiceName);\n  }, [optionText, translate, translateChoice]);\n  var getChoiceValue = useCallback(function (choice) {\n    return get(choice, optionValue);\n  }, [optionValue]);\n  var getDisableValue = useCallback(function (choice) {\n    return get(choice, disableValue);\n  }, [disableValue]);\n  return {\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    getDisableValue: getDisableValue\n  };\n};\n\nexport default useChoices;","map":{"version":3,"names":["isValidElement","cloneElement","useCallback","get","useTranslate","useChoices","_a","_b","optionText","_c","optionValue","_d","disableValue","_e","translateChoice","translate","getChoiceText","choice","record","choiceName","_","String","getChoiceValue","getDisableValue"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-core/esm/form/useChoices.js"],"sourcesContent":["import { isValidElement, cloneElement, useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for choices handling.\n *\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n */\nvar useChoices = function (_a) {\n    var _b = _a.optionText, optionText = _b === void 0 ? 'name' : _b, _c = _a.optionValue, optionValue = _c === void 0 ? 'id' : _c, _d = _a.disableValue, disableValue = _d === void 0 ? 'disabled' : _d, _e = _a.translateChoice, translateChoice = _e === void 0 ? true : _e;\n    var translate = useTranslate();\n    var getChoiceText = useCallback(function (choice) {\n        if (isValidElement(optionText)) {\n            return cloneElement(optionText, {\n                record: choice,\n            });\n        }\n        var choiceName = typeof optionText === 'function'\n            ? optionText(choice)\n            : get(choice, optionText);\n        return isValidElement(choiceName)\n            ? choiceName\n            : translateChoice\n                ? translate(choiceName, { _: choiceName })\n                : String(choiceName);\n    }, [optionText, translate, translateChoice]);\n    var getChoiceValue = useCallback(function (choice) { return get(choice, optionValue); }, [\n        optionValue,\n    ]);\n    var getDisableValue = useCallback(function (choice) { return get(choice, disableValue); }, [\n        disableValue,\n    ]);\n    return {\n        getChoiceText: getChoiceText,\n        getChoiceValue: getChoiceValue,\n        getDisableValue: getDisableValue,\n    };\n};\nexport default useChoices;\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,WAAvC,QAA0D,OAA1D;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAG,UAAUC,EAAV,EAAc;EAC3B,IAAIC,EAAE,GAAGD,EAAE,CAACE,UAAZ;EAAA,IAAwBA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,MAAhB,GAAyBA,EAA9D;EAAA,IAAkEE,EAAE,GAAGH,EAAE,CAACI,WAA1E;EAAA,IAAuFA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA5H;EAAA,IAAgIE,EAAE,GAAGL,EAAE,CAACM,YAAxI;EAAA,IAAsJA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAhB,GAA6BA,EAAlM;EAAA,IAAsME,EAAE,GAAGP,EAAE,CAACQ,eAA9M;EAAA,IAA+NA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAxQ;EACA,IAAIE,SAAS,GAAGX,YAAY,EAA5B;EACA,IAAIY,aAAa,GAAGd,WAAW,CAAC,UAAUe,MAAV,EAAkB;IAC9C,IAAIjB,cAAc,CAACQ,UAAD,CAAlB,EAAgC;MAC5B,OAAOP,YAAY,CAACO,UAAD,EAAa;QAC5BU,MAAM,EAAED;MADoB,CAAb,CAAnB;IAGH;;IACD,IAAIE,UAAU,GAAG,OAAOX,UAAP,KAAsB,UAAtB,GACXA,UAAU,CAACS,MAAD,CADC,GAEXd,GAAG,CAACc,MAAD,EAAST,UAAT,CAFT;IAGA,OAAOR,cAAc,CAACmB,UAAD,CAAd,GACDA,UADC,GAEDL,eAAe,GACXC,SAAS,CAACI,UAAD,EAAa;MAAEC,CAAC,EAAED;IAAL,CAAb,CADE,GAEXE,MAAM,CAACF,UAAD,CAJhB;EAKH,CAd8B,EAc5B,CAACX,UAAD,EAAaO,SAAb,EAAwBD,eAAxB,CAd4B,CAA/B;EAeA,IAAIQ,cAAc,GAAGpB,WAAW,CAAC,UAAUe,MAAV,EAAkB;IAAE,OAAOd,GAAG,CAACc,MAAD,EAASP,WAAT,CAAV;EAAkC,CAAvD,EAAyD,CACrFA,WADqF,CAAzD,CAAhC;EAGA,IAAIa,eAAe,GAAGrB,WAAW,CAAC,UAAUe,MAAV,EAAkB;IAAE,OAAOd,GAAG,CAACc,MAAD,EAASL,YAAT,CAAV;EAAmC,CAAxD,EAA0D,CACvFA,YADuF,CAA1D,CAAjC;EAGA,OAAO;IACHI,aAAa,EAAEA,aADZ;IAEHM,cAAc,EAAEA,cAFb;IAGHC,eAAe,EAAEA;EAHd,CAAP;AAKH,CA7BD;;AA8BA,eAAelB,UAAf"},"metadata":{},"sourceType":"module"}