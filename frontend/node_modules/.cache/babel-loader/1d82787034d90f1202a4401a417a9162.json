{"ast":null,"code":"import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\n\nvar useTranslate = function () {\n  var _a = useContext(TranslationContext),\n      i18nProvider = _a.i18nProvider,\n      locale = _a.locale;\n\n  var translate = useCallback(function (key, options) {\n    return i18nProvider.translate(key, options);\n  }, // update the hook each time the locale changes\n  [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return i18nProvider ? translate : identity;\n};\n\nvar identity = function (key) {\n  return key;\n};\n\nexport default useTranslate;","map":{"version":3,"names":["useContext","useCallback","TranslationContext","useTranslate","_a","i18nProvider","locale","translate","key","options","identity"],"sources":["/app/node_modules/ra-core/esm/i18n/useTranslate.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\nvar useTranslate = function () {\n    var _a = useContext(TranslationContext), i18nProvider = _a.i18nProvider, locale = _a.locale;\n    var translate = useCallback(function (key, options) {\n        return i18nProvider.translate(key, options);\n    }, \n    // update the hook each time the locale changes\n    [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    return i18nProvider ? translate : identity;\n};\nvar identity = function (key) { return key; };\nexport default useTranslate;\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAG,YAAY;EAC3B,IAAIC,EAAE,GAAGJ,UAAU,CAACE,kBAAD,CAAnB;EAAA,IAAyCG,YAAY,GAAGD,EAAE,CAACC,YAA3D;EAAA,IAAyEC,MAAM,GAAGF,EAAE,CAACE,MAArF;;EACA,IAAIC,SAAS,GAAGN,WAAW,CAAC,UAAUO,GAAV,EAAeC,OAAf,EAAwB;IAChD,OAAOJ,YAAY,CAACE,SAAb,CAAuBC,GAAvB,EAA4BC,OAA5B,CAAP;EACH,CAF0B,EAG3B;EACA,CAACJ,YAAD,EAAeC,MAAf,CAJ2B,CAIJ;EAJI,CAA3B;EAMA,OAAOD,YAAY,GAAGE,SAAH,GAAeG,QAAlC;AACH,CATD;;AAUA,IAAIA,QAAQ,GAAG,UAAUF,GAAV,EAAe;EAAE,OAAOA,GAAP;AAAa,CAA7C;;AACA,eAAeL,YAAf"},"metadata":{},"sourceType":"module"}