{"ast":null,"code":"import * as React from 'react';\nimport { RecordContextProvider } from '../RecordContext';\nimport { EditContext } from './EditContext';\nimport { SaveContextProvider, usePickSaveContext } from './SaveContext';\n/**\n * Create an Edit Context.\n *\n * @example\n *\n * const MyEdit = (props) => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             <MyEditView>\n *         </EditContextProvider>\n *     );\n * };\n *\n * const MyEditView = () => {\n *     const record = useRecordContext();\n *     // or, to rerender only when the save operation change but not data\n *     const { saving } = useEditContext();\n * }\n *\n * @see EditContext\n * @see RecordContext\n */\n\nexport var EditContextProvider = function (_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(EditContext.Provider, {\n    value: value\n  }, React.createElement(SaveContextProvider, {\n    value: usePickSaveContext(value)\n  }, React.createElement(RecordContextProvider, {\n    value: value && value.record\n  }, children)));\n};","map":{"version":3,"names":["React","RecordContextProvider","EditContext","SaveContextProvider","usePickSaveContext","EditContextProvider","_a","children","value","createElement","Provider","record"],"sources":["/app/node_modules/ra-core/esm/controller/details/EditContextProvider.js"],"sourcesContent":["import * as React from 'react';\nimport { RecordContextProvider } from '../RecordContext';\nimport { EditContext } from './EditContext';\nimport { SaveContextProvider, usePickSaveContext } from './SaveContext';\n/**\n * Create an Edit Context.\n *\n * @example\n *\n * const MyEdit = (props) => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             <MyEditView>\n *         </EditContextProvider>\n *     );\n * };\n *\n * const MyEditView = () => {\n *     const record = useRecordContext();\n *     // or, to rerender only when the save operation change but not data\n *     const { saving } = useEditContext();\n * }\n *\n * @see EditContext\n * @see RecordContext\n */\nexport var EditContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(EditContext.Provider, { value: value },\n        React.createElement(SaveContextProvider, { value: usePickSaveContext(value) },\n            React.createElement(RecordContextProvider, { value: value && value.record }, children))));\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,eAAxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,EAAV,EAAc;EAC3C,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;EAAA,IAA4BC,KAAK,GAAGF,EAAE,CAACE,KAAvC;EACA,OAAQR,KAAK,CAACS,aAAN,CAAoBP,WAAW,CAACQ,QAAhC,EAA0C;IAAEF,KAAK,EAAEA;EAAT,CAA1C,EACJR,KAAK,CAACS,aAAN,CAAoBN,mBAApB,EAAyC;IAAEK,KAAK,EAAEJ,kBAAkB,CAACI,KAAD;EAA3B,CAAzC,EACIR,KAAK,CAACS,aAAN,CAAoBR,qBAApB,EAA2C;IAAEO,KAAK,EAAEA,KAAK,IAAIA,KAAK,CAACG;EAAxB,CAA3C,EAA6EJ,QAA7E,CADJ,CADI,CAAR;AAGH,CALM"},"metadata":{},"sourceType":"module"}