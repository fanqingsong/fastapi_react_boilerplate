{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInput, useReferenceInputController, warning as warningLog, ListContextProvider, ResourceContextProvider } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using `dataProvider.getList()`), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <AutocompleteInput optionText=\"title\" />\n * </ReferenceInput>\n */\n\nvar ReferenceInput = function (props) {\n  var format = props.format,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      parse = props.parse,\n      validate = props.validate,\n      rest = __rest(props, [\"format\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\"]);\n\n  var inputProps = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    validate: validate\n  }, rest));\n  return React.createElement(ReferenceInputView, __assign({}, inputProps, rest, useReferenceInputController(__assign(__assign({}, rest), inputProps))));\n};\n\nReferenceInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  filter: PropTypes.object,\n  filterToQuery: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  perPage: PropTypes.number,\n  record: PropTypes.object,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  source: PropTypes.string\n};\nReferenceInput.defaultProps = {\n  filter: {},\n  filterToQuery: function (searchText) {\n    return searchText ? {\n      q: searchText\n    } : {};\n  },\n  perPage: 25,\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  }\n};\n\nvar sanitizeRestProps = function (_a) {\n  var _b = _a.dataStatus,\n      dataStatus = _b === void 0 ? null : _b,\n      _c = _a.enableGetChoices,\n      enableGetChoices = _c === void 0 ? null : _c,\n      _d = _a.filter,\n      filter = _d === void 0 ? null : _d,\n      _e = _a.filterToQuery,\n      filterToQuery = _e === void 0 ? null : _e,\n      _f = _a.onChange,\n      onChange = _f === void 0 ? null : _f,\n      _g = _a.perPage,\n      perPage = _g === void 0 ? null : _g,\n      _h = _a.reference,\n      reference = _h === void 0 ? null : _h,\n      _j = _a.referenceRecord,\n      referenceRecord = _j === void 0 ? null : _j,\n      _k = _a.referenceSource,\n      referenceSource = _k === void 0 ? null : _k,\n      _l = _a.sort,\n      sort = _l === void 0 ? null : _l,\n      _m = _a.validation,\n      validation = _m === void 0 ? null : _m,\n      rest = __rest(_a, [\"dataStatus\", \"enableGetChoices\", \"filter\", \"filterToQuery\", \"onChange\", \"perPage\", \"reference\", \"referenceRecord\", \"referenceSource\", \"sort\", \"validation\"]);\n\n  return sanitizeInputRestProps(rest);\n};\n\nexport var ReferenceInputView = function (props) {\n  var allowEmpty = props.allowEmpty,\n      basePath = props.basePath,\n      children = props.children,\n      choices = props.choices,\n      classes = props.classes,\n      className = props.className,\n      error = props.error,\n      helperText = props.helperText,\n      id = props.id,\n      input = props.input,\n      isRequired = props.isRequired,\n      label = props.label,\n      meta = props.meta,\n      possibleValues = props.possibleValues,\n      resource = props.resource,\n      reference = props.reference,\n      setFilter = props.setFilter,\n      setPagination = props.setPagination,\n      setSort = props.setSort,\n      source = props.source,\n      warning = props.warning,\n      rest = __rest(props, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"meta\", \"possibleValues\", \"resource\", \"reference\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"warning\"]);\n\n  if (Children.count(children) !== 1) {\n    throw new Error('<ReferenceInput> only accepts a single child');\n  } // This is not a final-form error but an unrecoverable error from the\n  // useReferenceInputController hook\n\n\n  if (error) {\n    return React.createElement(ReferenceError, {\n      label: label,\n      error: error\n    });\n  } // When the useReferenceInputController returns a warning, it means it\n  // had an issue trying to load the referenced record\n  // We display it by overriding the final-form meta\n\n\n  var finalMeta = warning ? __assign(__assign({}, meta), {\n    error: warning\n  }) : meta; // helperText should never be set on ReferenceInput, only in child component\n  // But in a Filter component, the child helperText have to be forced to false\n\n  warningLog(helperText !== undefined && helperText !== false, \"<ReferenceInput> doesn't accept a helperText prop. Set the helperText prop on the child component instead\");\n  var disabledHelperText = helperText === false ? {\n    helperText: helperText\n  } : {};\n  return React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ListContextProvider, {\n    value: possibleValues\n  }, cloneElement(children, __assign(__assign({\n    allowEmpty: allowEmpty,\n    classes: classes,\n    className: className,\n    input: input,\n    isRequired: isRequired,\n    label: label,\n    resource: resource,\n    meta: finalMeta,\n    source: source,\n    choices: choices,\n    basePath: basePath,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    translateChoice: false\n  }, disabledHelperText), sanitizeRestProps(rest)))));\n};\nexport default ReferenceInput;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","cloneElement","PropTypes","useInput","useReferenceInputController","warning","warningLog","ListContextProvider","ResourceContextProvider","sanitizeInputRestProps","ReferenceError","ReferenceInput","props","format","onBlur","onChange","onFocus","parse","validate","rest","inputProps","createElement","ReferenceInputView","propTypes","allowEmpty","bool","basePath","string","children","element","isRequired","className","classes","object","filter","filterToQuery","func","label","perPage","number","record","reference","resource","sort","shape","field","order","oneOf","source","defaultProps","searchText","q","sanitizeRestProps","_a","_b","dataStatus","_c","enableGetChoices","_d","_e","_f","_g","_h","_j","referenceRecord","_k","referenceSource","_l","_m","validation","choices","error","helperText","id","input","meta","possibleValues","setFilter","setPagination","setSort","count","Error","finalMeta","undefined","disabledHelperText","value","translateChoice"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-ui-materialui/esm/input/ReferenceInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInput, useReferenceInputController, warning as warningLog, ListContextProvider, ResourceContextProvider, } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using `dataProvider.getList()`), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <AutocompleteInput optionText=\"title\" />\n * </ReferenceInput>\n */\nvar ReferenceInput = function (props) {\n    var format = props.format, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, parse = props.parse, validate = props.validate, rest = __rest(props, [\"format\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\"]);\n    var inputProps = useInput(__assign({ format: format, onBlur: onBlur, onChange: onChange, onFocus: onFocus, parse: parse, validate: validate }, rest));\n    return (React.createElement(ReferenceInputView, __assign({}, inputProps, rest, useReferenceInputController(__assign(__assign({}, rest), inputProps)))));\n};\nReferenceInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    filter: PropTypes.object,\n    filterToQuery: PropTypes.func.isRequired,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    perPage: PropTypes.number,\n    record: PropTypes.object,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n};\nReferenceInput.defaultProps = {\n    filter: {},\n    filterToQuery: function (searchText) { return (searchText ? { q: searchText } : {}); },\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\nvar sanitizeRestProps = function (_a) {\n    var _b = _a.dataStatus, dataStatus = _b === void 0 ? null : _b, _c = _a.enableGetChoices, enableGetChoices = _c === void 0 ? null : _c, _d = _a.filter, filter = _d === void 0 ? null : _d, _e = _a.filterToQuery, filterToQuery = _e === void 0 ? null : _e, _f = _a.onChange, onChange = _f === void 0 ? null : _f, _g = _a.perPage, perPage = _g === void 0 ? null : _g, _h = _a.reference, reference = _h === void 0 ? null : _h, _j = _a.referenceRecord, referenceRecord = _j === void 0 ? null : _j, _k = _a.referenceSource, referenceSource = _k === void 0 ? null : _k, _l = _a.sort, sort = _l === void 0 ? null : _l, _m = _a.validation, validation = _m === void 0 ? null : _m, rest = __rest(_a, [\"dataStatus\", \"enableGetChoices\", \"filter\", \"filterToQuery\", \"onChange\", \"perPage\", \"reference\", \"referenceRecord\", \"referenceSource\", \"sort\", \"validation\"]);\n    return sanitizeInputRestProps(rest);\n};\nexport var ReferenceInputView = function (props) {\n    var allowEmpty = props.allowEmpty, basePath = props.basePath, children = props.children, choices = props.choices, classes = props.classes, className = props.className, error = props.error, helperText = props.helperText, id = props.id, input = props.input, isRequired = props.isRequired, label = props.label, meta = props.meta, possibleValues = props.possibleValues, resource = props.resource, reference = props.reference, setFilter = props.setFilter, setPagination = props.setPagination, setSort = props.setSort, source = props.source, warning = props.warning, rest = __rest(props, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"meta\", \"possibleValues\", \"resource\", \"reference\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"warning\"]);\n    if (Children.count(children) !== 1) {\n        throw new Error('<ReferenceInput> only accepts a single child');\n    }\n    // This is not a final-form error but an unrecoverable error from the\n    // useReferenceInputController hook\n    if (error) {\n        return React.createElement(ReferenceError, { label: label, error: error });\n    }\n    // When the useReferenceInputController returns a warning, it means it\n    // had an issue trying to load the referenced record\n    // We display it by overriding the final-form meta\n    var finalMeta = warning\n        ? __assign(__assign({}, meta), { error: warning }) : meta;\n    // helperText should never be set on ReferenceInput, only in child component\n    // But in a Filter component, the child helperText have to be forced to false\n    warningLog(helperText !== undefined && helperText !== false, \"<ReferenceInput> doesn't accept a helperText prop. Set the helperText prop on the child component instead\");\n    var disabledHelperText = helperText === false ? { helperText: helperText } : {};\n    return (React.createElement(ResourceContextProvider, { value: reference },\n        React.createElement(ListContextProvider, { value: possibleValues }, cloneElement(children, __assign(__assign({ allowEmpty: allowEmpty, classes: classes, className: className, input: input, isRequired: isRequired, label: label, resource: resource, meta: finalMeta, source: source, choices: choices, basePath: basePath, setFilter: setFilter, setPagination: setPagination, setSort: setSort, translateChoice: false }, disabledHelperText), sanitizeRestProps(rest))))));\n};\nexport default ReferenceInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}