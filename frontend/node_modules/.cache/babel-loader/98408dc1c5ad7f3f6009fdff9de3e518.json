{"ast":null,"code":"import { UPDATE_MANY } from '../../core';\nexport var crudUpdateMany = function (resource, ids, data, basePath, refresh) {\n  if (refresh === void 0) {\n    refresh = true;\n  }\n\n  return {\n    type: CRUD_UPDATE_MANY,\n    payload: {\n      ids: ids,\n      data: data\n    },\n    meta: {\n      resource: resource,\n      fetch: UPDATE_MANY,\n      onSuccess: {\n        notification: {\n          body: 'ra.notification.updated',\n          level: 'info',\n          messageArgs: {\n            smart_count: ids.length\n          }\n        },\n        basePath: basePath,\n        refresh: refresh,\n        unselectAll: true\n      },\n      onFailure: {\n        notification: {\n          body: 'ra.notification.http_error',\n          level: 'warning'\n        }\n      }\n    }\n  };\n};\nexport var CRUD_UPDATE_MANY = 'RA/CRUD_UPDATE_MANY';\nexport var CRUD_UPDATE_MANY_LOADING = 'RA/CRUD_UPDATE_MANY_LOADING';\nexport var CRUD_UPDATE_MANY_FAILURE = 'RA/CRUD_UPDATE_MANY_FAILURE';\nexport var CRUD_UPDATE_MANY_SUCCESS = 'RA/CRUD_UPDATE_MANY_SUCCESS';","map":{"version":3,"names":["UPDATE_MANY","crudUpdateMany","resource","ids","data","basePath","refresh","type","CRUD_UPDATE_MANY","payload","meta","fetch","onSuccess","notification","body","level","messageArgs","smart_count","length","unselectAll","onFailure","CRUD_UPDATE_MANY_LOADING","CRUD_UPDATE_MANY_FAILURE","CRUD_UPDATE_MANY_SUCCESS"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-core/esm/actions/dataActions/crudUpdateMany.js"],"sourcesContent":["import { UPDATE_MANY } from '../../core';\nexport var crudUpdateMany = function (resource, ids, data, basePath, refresh) {\n    if (refresh === void 0) { refresh = true; }\n    return ({\n        type: CRUD_UPDATE_MANY,\n        payload: { ids: ids, data: data },\n        meta: {\n            resource: resource,\n            fetch: UPDATE_MANY,\n            onSuccess: {\n                notification: {\n                    body: 'ra.notification.updated',\n                    level: 'info',\n                    messageArgs: {\n                        smart_count: ids.length,\n                    },\n                },\n                basePath: basePath,\n                refresh: refresh,\n                unselectAll: true,\n            },\n            onFailure: {\n                notification: {\n                    body: 'ra.notification.http_error',\n                    level: 'warning',\n                },\n            },\n        },\n    });\n};\nexport var CRUD_UPDATE_MANY = 'RA/CRUD_UPDATE_MANY';\nexport var CRUD_UPDATE_MANY_LOADING = 'RA/CRUD_UPDATE_MANY_LOADING';\nexport var CRUD_UPDATE_MANY_FAILURE = 'RA/CRUD_UPDATE_MANY_FAILURE';\nexport var CRUD_UPDATE_MANY_SUCCESS = 'RA/CRUD_UPDATE_MANY_SUCCESS';\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkD;EAC1E,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,IAAV;EAAiB;;EAC3C,OAAQ;IACJC,IAAI,EAAEC,gBADF;IAEJC,OAAO,EAAE;MAAEN,GAAG,EAAEA,GAAP;MAAYC,IAAI,EAAEA;IAAlB,CAFL;IAGJM,IAAI,EAAE;MACFR,QAAQ,EAAEA,QADR;MAEFS,KAAK,EAAEX,WAFL;MAGFY,SAAS,EAAE;QACPC,YAAY,EAAE;UACVC,IAAI,EAAE,yBADI;UAEVC,KAAK,EAAE,MAFG;UAGVC,WAAW,EAAE;YACTC,WAAW,EAAEd,GAAG,CAACe;UADR;QAHH,CADP;QAQPb,QAAQ,EAAEA,QARH;QASPC,OAAO,EAAEA,OATF;QAUPa,WAAW,EAAE;MAVN,CAHT;MAeFC,SAAS,EAAE;QACPP,YAAY,EAAE;UACVC,IAAI,EAAE,4BADI;UAEVC,KAAK,EAAE;QAFG;MADP;IAfT;EAHF,CAAR;AA0BH,CA5BM;AA6BP,OAAO,IAAIP,gBAAgB,GAAG,qBAAvB;AACP,OAAO,IAAIa,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B"},"metadata":{},"sourceType":"module"}