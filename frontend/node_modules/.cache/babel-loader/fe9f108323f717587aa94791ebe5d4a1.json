{"ast":null,"code":"var _jsxFileName = \"/app/src/views/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../utils/auth';\nexport const PrivateRoute = _ref => {\n  let {\n    component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated() === true ? React.createElement(component, props) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }));\n};","map":{"version":3,"names":["React","Route","Redirect","isAuthenticated","PrivateRoute","component","rest","props","createElement"],"sources":["/app/src/views/PrivateRoute.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../utils/auth';\n\ntype PrivateRouteType = {\n  component: React.ComponentType<any>;\n  path?: string | string[];\n};\n\nexport const PrivateRoute: FC<PrivateRouteType> = ({\n  component,\n  ...rest\n}: any) => (\n  <Route\n    {...rest}\n    render={(props: any) =>\n      isAuthenticated() === true ? (\n        React.createElement(component, props)\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,eAAT,QAAgC,eAAhC;AAOA,OAAO,MAAMC,YAAkC,GAAG;EAAA,IAAC;IACjDC,SADiD;IAEjD,GAAGC;EAF8C,CAAD;EAAA,oBAIhD,oBAAC,KAAD,oBACMA,IADN;IAEE,MAAM,EAAGC,KAAD,IACNJ,eAAe,OAAO,IAAtB,GACEH,KAAK,CAACQ,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CADF,gBAGE,oBAAC,QAAD;MAAU,EAAE,EAAC,QAAb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EANN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAJgD;AAAA,CAA3C"},"metadata":{},"sourceType":"module"}