{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Array = GetIntrinsic('%Array%'); // eslint-disable-next-line global-require\n\nvar toStr = !$Array.isArray && require('call-bind/callBound')('Object.prototype.toString');\n\nmodule.exports = $Array.isArray || function IsArray(argument) {\n  return toStr(argument) === '[object Array]';\n};","map":{"version":3,"names":["GetIntrinsic","require","$Array","toStr","isArray","module","exports","IsArray","argument"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/es-abstract/helpers/IsArray.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Array = GetIntrinsic('%Array%');\n\n// eslint-disable-next-line global-require\nvar toStr = !$Array.isArray && require('call-bind/callBound')('Object.prototype.toString');\n\nmodule.exports = $Array.isArray || function IsArray(argument) {\n\treturn toStr(argument) === '[object Array]';\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,MAAM,GAAGF,YAAY,CAAC,SAAD,CAAzB,C,CAEA;;AACA,IAAIG,KAAK,GAAG,CAACD,MAAM,CAACE,OAAR,IAAmBH,OAAO,CAAC,qBAAD,CAAP,CAA+B,2BAA/B,CAA/B;;AAEAI,MAAM,CAACC,OAAP,GAAiBJ,MAAM,CAACE,OAAP,IAAkB,SAASG,OAAT,CAAiBC,QAAjB,EAA2B;EAC7D,OAAOL,KAAK,CAACK,QAAD,CAAL,KAAoB,gBAA3B;AACA,CAFD"},"metadata":{},"sourceType":"script"}