{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","Typography","Collapse","alpha","withStyles","useTheme","useForkRef","TreeViewContext","styles","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","isPrintableCharacter","str","length","match","TreeItem","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","nodeId","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useContext","useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","useRef","contentRef","handleRef","expandable","Boolean","Array","isArray","focused","tabbable","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","handleClick","event","multiple","shiftKey","ctrlKey","metaKey","defaultPrevented","end","handleMouseDown","preventDefault","handleNextArrow","handlePreviousArrow","parent","handleKeyDown","flag","key","altKey","currentTarget","target","ctrlPressed","current","stopPropagation","direction","toLowerCase","handleFocus","useEffect","childIds","Children","forEach","child","isValidElement","push","undefined","textContent","substring","ariaSelected","createElement","role","tabIndex","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","node","object","string","isRequired","func","elementType","name"],"sources":["/app/node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"],"mappings":"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"},"metadata":{},"sourceType":"module"}