{"ast":null,"code":"import { useGetMany } from '../dataProvider';\n/**\n * @typedef ReferenceProps\n * @type {Object}\n * @property {boolean} loading: boolean indicating if the reference is loading\n * @property {boolean} loaded: boolean indicating if the reference has loaded\n * @property {Object} referenceRecord: the referenced record.\n */\n\n/**\n * Fetch reference record, and return it when available\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n *\n * const { loading, loaded, referenceRecord } = useReference({\n *     id: 7,\n *     reference: 'users',\n * });\n *\n * @param {Object} option\n * @param {string} option.reference The linked resource name\n * @param {string} option.id The id of the reference\n *\n * @returns {ReferenceProps} The reference record\n */\n\nexport var useReference = function (_a) {\n  var reference = _a.reference,\n      id = _a.id;\n\n  var _b = useGetMany(reference, [id]),\n      data = _b.data,\n      error = _b.error,\n      loading = _b.loading,\n      loaded = _b.loaded,\n      refetch = _b.refetch;\n\n  return {\n    referenceRecord: error ? undefined : data[0],\n    refetch: refetch,\n    error: error,\n    loading: loading,\n    loaded: loaded\n  };\n};\nexport default useReference;","map":{"version":3,"names":["useGetMany","useReference","_a","reference","id","_b","data","error","loading","loaded","refetch","referenceRecord","undefined"],"sources":["/app/node_modules/ra-core/esm/controller/useReference.js"],"sourcesContent":["import { useGetMany } from '../dataProvider';\n/**\n * @typedef ReferenceProps\n * @type {Object}\n * @property {boolean} loading: boolean indicating if the reference is loading\n * @property {boolean} loaded: boolean indicating if the reference has loaded\n * @property {Object} referenceRecord: the referenced record.\n */\n/**\n * Fetch reference record, and return it when available\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n *\n * const { loading, loaded, referenceRecord } = useReference({\n *     id: 7,\n *     reference: 'users',\n * });\n *\n * @param {Object} option\n * @param {string} option.reference The linked resource name\n * @param {string} option.id The id of the reference\n *\n * @returns {ReferenceProps} The reference record\n */\nexport var useReference = function (_a) {\n    var reference = _a.reference, id = _a.id;\n    var _b = useGetMany(reference, [\n        id,\n    ]), data = _b.data, error = _b.error, loading = _b.loading, loaded = _b.loaded, refetch = _b.refetch;\n    return {\n        referenceRecord: error ? undefined : data[0],\n        refetch: refetch,\n        error: error,\n        loading: loading,\n        loaded: loaded,\n    };\n};\nexport default useReference;\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,YAAY,GAAG,UAAUC,EAAV,EAAc;EACpC,IAAIC,SAAS,GAAGD,EAAE,CAACC,SAAnB;EAAA,IAA8BC,EAAE,GAAGF,EAAE,CAACE,EAAtC;;EACA,IAAIC,EAAE,GAAGL,UAAU,CAACG,SAAD,EAAY,CAC3BC,EAD2B,CAAZ,CAAnB;EAAA,IAEIE,IAAI,GAAGD,EAAE,CAACC,IAFd;EAAA,IAEoBC,KAAK,GAAGF,EAAE,CAACE,KAF/B;EAAA,IAEsCC,OAAO,GAAGH,EAAE,CAACG,OAFnD;EAAA,IAE4DC,MAAM,GAAGJ,EAAE,CAACI,MAFxE;EAAA,IAEgFC,OAAO,GAAGL,EAAE,CAACK,OAF7F;;EAGA,OAAO;IACHC,eAAe,EAAEJ,KAAK,GAAGK,SAAH,GAAeN,IAAI,CAAC,CAAD,CADtC;IAEHI,OAAO,EAAEA,OAFN;IAGHH,KAAK,EAAEA,KAHJ;IAIHC,OAAO,EAAEA,OAJN;IAKHC,MAAM,EAAEA;EALL,CAAP;AAOH,CAZM;AAaP,eAAeR,YAAf"},"metadata":{},"sourceType":"module"}