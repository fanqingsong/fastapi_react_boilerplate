{"ast":null,"code":"import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\n * Context to store the sort part of the useListController() result.\n *\n * Use the useListSortContext() hook to read the context. That's what many\n * List components do in react-admin (e.g. <SortButton>).\n *\n * @typedef {Object} ListSortContextValue\n * @prop {Object}   currentSort a sort object { field, order }, e.g. { field: 'date', order: 'DESC' }\n * @prop {Function} setSort a callback to change the sort, e.g. setSort('name', 'ASC')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListSortContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListSortContext\n *\n * @example\n *\n * import { useListController, usePickSortContext, ListSortContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListSortContext.Provider value={usePickSortContext(controllerProps)}>\n *             ...\n *         </ListSortContext.Provider>\n *     );\n * };\n */\n\nvar ListSortContext = createContext({\n  currentSort: null,\n  setSort: null,\n  resource: null\n});\nexport var usePickSortContext = function (context) {\n  return useMemo(function () {\n    return pick(context, ['currentSort', 'setSort', 'resource']);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [context.currentSort, context.setSort]);\n};\nListSortContext.displayName = 'ListSortContext';\nexport default ListSortContext;","map":{"version":3,"names":["createContext","useMemo","pick","ListSortContext","currentSort","setSort","resource","usePickSortContext","context","displayName"],"sources":["/app/node_modules/ra-core/esm/controller/ListSortContext.js"],"sourcesContent":["import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\n * Context to store the sort part of the useListController() result.\n *\n * Use the useListSortContext() hook to read the context. That's what many\n * List components do in react-admin (e.g. <SortButton>).\n *\n * @typedef {Object} ListSortContextValue\n * @prop {Object}   currentSort a sort object { field, order }, e.g. { field: 'date', order: 'DESC' }\n * @prop {Function} setSort a callback to change the sort, e.g. setSort('name', 'ASC')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListSortContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListSortContext\n *\n * @example\n *\n * import { useListController, usePickSortContext, ListSortContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListSortContext.Provider value={usePickSortContext(controllerProps)}>\n *             ...\n *         </ListSortContext.Provider>\n *     );\n * };\n */\nvar ListSortContext = createContext({\n    currentSort: null,\n    setSort: null,\n    resource: null,\n});\nexport var usePickSortContext = function (context) {\n    return useMemo(function () { return pick(context, ['currentSort', 'setSort', 'resource']); }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [context.currentSort, context.setSort]);\n};\nListSortContext.displayName = 'ListSortContext';\nexport default ListSortContext;\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAGH,aAAa,CAAC;EAChCI,WAAW,EAAE,IADmB;EAEhCC,OAAO,EAAE,IAFuB;EAGhCC,QAAQ,EAAE;AAHsB,CAAD,CAAnC;AAKA,OAAO,IAAIC,kBAAkB,GAAG,UAAUC,OAAV,EAAmB;EAC/C,OAAOP,OAAO,CAAC,YAAY;IAAE,OAAOC,IAAI,CAACM,OAAD,EAAU,CAAC,aAAD,EAAgB,SAAhB,EAA2B,UAA3B,CAAV,CAAX;EAA+D,CAA9E,EACd;EACA,CAACA,OAAO,CAACJ,WAAT,EAAsBI,OAAO,CAACH,OAA9B,CAFc,CAAd;AAGH,CAJM;AAKPF,eAAe,CAACM,WAAhB,GAA8B,iBAA9B;AACA,eAAeN,eAAf"},"metadata":{},"sourceType":"module"}