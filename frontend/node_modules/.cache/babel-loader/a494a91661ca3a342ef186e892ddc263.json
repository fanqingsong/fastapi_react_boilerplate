{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n  chip: {\n    margin: 4,\n    cursor: 'inherit'\n  }\n}, {\n  name: 'RaChipField'\n});\nexport var ChipField = memo(function (props) {\n  var className = props.className,\n      classesOverride = props.classes,\n      source = props.source,\n      emptyText = props.emptyText,\n      rest = __rest(props, [\"className\", \"classes\", \"source\", \"emptyText\"]);\n\n  var record = useRecordContext(props);\n  var classes = useStyles(props);\n  var value = get(record, source);\n\n  if (value == null && emptyText) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText);\n  }\n\n  return React.createElement(Chip, __assign({\n    className: classnames(classes.chip, className),\n    label: value\n  }, sanitizeFieldRestProps(rest)));\n});\nChipField.defaultProps = {\n  addLabel: true\n};\nChipField.propTypes = __assign(__assign({}, ChipField.propTypes), fieldPropTypes);\nChipField.displayName = 'ChipField';\nexport default ChipField;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","get","Chip","Typography","makeStyles","classnames","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","useStyles","chip","margin","cursor","name","ChipField","props","className","classesOverride","classes","source","emptyText","rest","record","value","createElement","component","variant","label","defaultProps","addLabel","propTypes","displayName"],"sources":["/home/lightsong/workspace/freact/frontend/node_modules/ra-ui-materialui/esm/field/ChipField.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar useStyles = makeStyles({\n    chip: { margin: 4, cursor: 'inherit' },\n}, { name: 'RaChipField' });\nexport var ChipField = memo(function (props) {\n    var className = props.className, classesOverride = props.classes, source = props.source, emptyText = props.emptyText, rest = __rest(props, [\"className\", \"classes\", \"source\", \"emptyText\"]);\n    var record = useRecordContext(props);\n    var classes = useStyles(props);\n    var value = get(record, source);\n    if (value == null && emptyText) {\n        return (React.createElement(Typography, __assign({ component: \"span\", variant: \"body2\", className: className }, sanitizeFieldRestProps(rest)), emptyText));\n    }\n    return (React.createElement(Chip, __assign({ className: classnames(classes.chip, className), label: value }, sanitizeFieldRestProps(rest))));\n});\nChipField.defaultProps = {\n    addLabel: true,\n};\nChipField.propTypes = __assign(__assign({}, ChipField.propTypes), fieldPropTypes);\nChipField.displayName = 'ChipField';\nexport default ChipField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}