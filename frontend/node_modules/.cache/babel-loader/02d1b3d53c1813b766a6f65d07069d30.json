{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldTitle, useInput, warning } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport CheckboxGroupInputItem from './CheckboxGroupInputItem';\nimport InputHelperText from './InputHelperText';\nimport classnames from 'classnames';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Checkbox> components\n */\n\nvar CheckboxGroupInput = function (props) {\n  var _a = props.choices,\n      choices = _a === void 0 ? [] : _a,\n      className = props.className,\n      classesOverride = props.classes,\n      format = props.format,\n      helperText = props.helperText,\n      label = props.label,\n      loaded = props.loaded,\n      loading = props.loading,\n      _b = props.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      optionText = props.optionText,\n      optionValue = props.optionValue,\n      options = props.options,\n      parse = props.parse,\n      resource = props.resource,\n      row = props.row,\n      source = props.source,\n      translate = props.translate,\n      translateChoice = props.translateChoice,\n      validate = props.validate,\n      rest = __rest(props, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"loaded\", \"loading\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"optionText\", \"optionValue\", \"options\", \"parse\", \"resource\", \"row\", \"source\", \"translate\", \"translateChoice\", \"validate\"]);\n\n  var classes = useStyles(props);\n  warning(source === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\");\n  warning(choices === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n\n  var _c = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _c.id,\n      _d = _c.input,\n      finalFormOnChange = _d.onChange,\n      finalFormOnBlur = _d.onBlur,\n      value = _d.value,\n      isRequired = _c.isRequired,\n      _e = _c.meta,\n      error = _e.error,\n      submitError = _e.submitError,\n      touched = _e.touched;\n\n  var handleCheck = useCallback(function (event, isChecked) {\n    var newValue;\n\n    if (choices.every(function (item) {\n      return typeof get(item, optionValue) === 'number';\n    })) {\n      try {\n        // try to convert string value to number, e.g. '123'\n        newValue = JSON.parse(event.target.value);\n      } catch (e) {\n        // impossible to convert value, e.g. 'abc'\n        newValue = event.target.value;\n      }\n    } else {\n      newValue = event.target.value;\n    }\n\n    if (isChecked) {\n      finalFormOnChange(__spreadArray(__spreadArray([], value || [], true), [newValue], false));\n    } else {\n      finalFormOnChange(value.filter(function (v) {\n        return v != newValue;\n      })); // eslint-disable-line eqeqeq\n    }\n\n    finalFormOnBlur(); // HACK: See https://github.com/final-form/react-final-form/issues/365#issuecomment-515045503\n  }, [choices, finalFormOnBlur, optionValue, finalFormOnChange, value]);\n\n  if (loading) {\n    return React.createElement(Labeled, {\n      label: label,\n      source: source,\n      resource: resource,\n      className: className,\n      isRequired: isRequired,\n      margin: margin\n    }, React.createElement(LinearProgress, null));\n  }\n\n  return React.createElement(FormControl, __assign({\n    component: \"fieldset\",\n    margin: margin,\n    error: touched && !!(error || submitError),\n    className: classnames(classes.root, className)\n  }, sanitizeRestProps(rest)), React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.label\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(FormGroup, {\n    row: row\n  }, choices.map(function (choice) {\n    return React.createElement(CheckboxGroupInputItem, {\n      key: get(choice, optionValue),\n      choice: choice,\n      id: id,\n      onChange: handleCheck,\n      options: options,\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice,\n      value: value\n    });\n  })), React.createElement(FormHelperText, null, React.createElement(InputHelperText, {\n    touched: touched,\n    error: error || submitError,\n    helperText: helperText\n  })));\n};\n\nvar sanitizeRestProps = function (_a) {\n  var refetch = _a.refetch,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      loaded = _a.loaded,\n      touched = _a.touched,\n      rest = __rest(_a, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n\n  return sanitizeInputRestProps(rest);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    label: {\n      transform: 'translate(0, 8px) scale(0.75)',\n      transformOrigin: \"top \" + (theme.direction === 'ltr' ? 'left' : 'right')\n    }\n  };\n}, {\n  name: 'RaCheckboxGroupInput'\n});\nCheckboxGroupInput.propTypes = {\n  choices: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  source: PropTypes.string,\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),\n  optionValue: PropTypes.string,\n  row: PropTypes.bool,\n  resource: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nCheckboxGroupInput.defaultProps = {\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  translateChoice: true,\n  fullWidth: true,\n  row: true\n};\nexport default CheckboxGroupInput;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArray","to","from","pack","l","ar","Array","slice","concat","React","useCallback","PropTypes","get","FormLabel","FormControl","FormGroup","FormHelperText","makeStyles","FieldTitle","useInput","warning","sanitizeInputRestProps","CheckboxGroupInputItem","InputHelperText","classnames","Labeled","LinearProgress","CheckboxGroupInput","props","_a","choices","className","classesOverride","classes","format","helperText","label","loaded","loading","_b","margin","onBlur","onChange","onFocus","optionText","optionValue","options","parse","resource","row","source","translate","translateChoice","validate","rest","useStyles","undefined","_c","id","_d","input","finalFormOnChange","finalFormOnBlur","value","isRequired","_e","meta","error","submitError","touched","handleCheck","event","isChecked","newValue","every","item","JSON","target","filter","v","createElement","component","root","sanitizeRestProps","map","choice","key","refetch","setFilter","setPagination","setSort","theme","transform","transformOrigin","direction","name","propTypes","arrayOf","object","string","oneOfType","bool","func","element","defaultProps","fullWidth"],"sources":["/app/node_modules/ra-ui-materialui/esm/input/CheckboxGroupInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FieldTitle, useInput, warning } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport CheckboxGroupInputItem from './CheckboxGroupInputItem';\nimport InputHelperText from './InputHelperText';\nimport classnames from 'classnames';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Checkbox> components\n */\nvar CheckboxGroupInput = function (props) {\n    var _a = props.choices, choices = _a === void 0 ? [] : _a, className = props.className, classesOverride = props.classes, format = props.format, helperText = props.helperText, label = props.label, loaded = props.loaded, loading = props.loading, _b = props.margin, margin = _b === void 0 ? 'dense' : _b, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, optionText = props.optionText, optionValue = props.optionValue, options = props.options, parse = props.parse, resource = props.resource, row = props.row, source = props.source, translate = props.translate, translateChoice = props.translateChoice, validate = props.validate, rest = __rest(props, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"loaded\", \"loading\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"optionText\", \"optionValue\", \"options\", \"parse\", \"resource\", \"row\", \"source\", \"translate\", \"translateChoice\", \"validate\"]);\n    var classes = useStyles(props);\n    warning(source === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\");\n    warning(choices === undefined, \"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n    var _c = useInput(__assign({ format: format, onBlur: onBlur, onChange: onChange, onFocus: onFocus, parse: parse, resource: resource, source: source, validate: validate }, rest)), id = _c.id, _d = _c.input, finalFormOnChange = _d.onChange, finalFormOnBlur = _d.onBlur, value = _d.value, isRequired = _c.isRequired, _e = _c.meta, error = _e.error, submitError = _e.submitError, touched = _e.touched;\n    var handleCheck = useCallback(function (event, isChecked) {\n        var newValue;\n        if (choices.every(function (item) { return typeof get(item, optionValue) === 'number'; })) {\n            try {\n                // try to convert string value to number, e.g. '123'\n                newValue = JSON.parse(event.target.value);\n            }\n            catch (e) {\n                // impossible to convert value, e.g. 'abc'\n                newValue = event.target.value;\n            }\n        }\n        else {\n            newValue = event.target.value;\n        }\n        if (isChecked) {\n            finalFormOnChange(__spreadArray(__spreadArray([], (value || []), true), [newValue], false));\n        }\n        else {\n            finalFormOnChange(value.filter(function (v) { return v != newValue; })); // eslint-disable-line eqeqeq\n        }\n        finalFormOnBlur(); // HACK: See https://github.com/final-form/react-final-form/issues/365#issuecomment-515045503\n    }, [choices, finalFormOnBlur, optionValue, finalFormOnChange, value]);\n    if (loading) {\n        return (React.createElement(Labeled, { label: label, source: source, resource: resource, className: className, isRequired: isRequired, margin: margin },\n            React.createElement(LinearProgress, null)));\n    }\n    return (React.createElement(FormControl, __assign({ component: \"fieldset\", margin: margin, error: touched && !!(error || submitError), className: classnames(classes.root, className) }, sanitizeRestProps(rest)),\n        React.createElement(FormLabel, { component: \"legend\", className: classes.label },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })),\n        React.createElement(FormGroup, { row: row }, choices.map(function (choice) { return (React.createElement(CheckboxGroupInputItem, { key: get(choice, optionValue), choice: choice, id: id, onChange: handleCheck, options: options, optionText: optionText, optionValue: optionValue, translateChoice: translateChoice, value: value })); })),\n        React.createElement(FormHelperText, null,\n            React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText }))));\n};\nvar sanitizeRestProps = function (_a) {\n    var refetch = _a.refetch, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, loaded = _a.loaded, touched = _a.touched, rest = __rest(_a, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n    return sanitizeInputRestProps(rest);\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    label: {\n        transform: 'translate(0, 8px) scale(0.75)',\n        transformOrigin: \"top \" + (theme.direction === 'ltr' ? 'left' : 'right'),\n    },\n}); }, { name: 'RaCheckboxGroupInput' });\nCheckboxGroupInput.propTypes = {\n    choices: PropTypes.arrayOf(PropTypes.object),\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    source: PropTypes.string,\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]),\n    optionValue: PropTypes.string,\n    row: PropTypes.bool,\n    resource: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nCheckboxGroupInput.defaultProps = {\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n    fullWidth: true,\n    row: true,\n};\nexport default CheckboxGroupInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}